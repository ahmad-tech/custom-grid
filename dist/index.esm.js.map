{"version":3,"file":"index.esm.js","sources":["../src/lib/utils.ts","../src/components/ui/table.tsx","../src/components/ui/checkbox.tsx","../src/components/ui/input.tsx","../src/components/ui/select.tsx","../src/components/ui/button.tsx","../src/components/ui/popover.tsx","../src/components/ui/scroll-area.tsx","../src/components/datetime-picker.tsx","../src/components/simple-time-picker.tsx","../node_modules/.pnpm/react-hook-form@7.56.4_react@19.1.0/node_modules/react-hook-form/dist/index.esm.mjs","../src/components/ui/tooltip.tsx","../src/components/datetime-input.tsx","../src/components/Grid/CellEditor.tsx","../src/components/ui/switch.tsx","../src/components/Grid/useCookedData.tsx","../src/components/Grid/CellFilter.tsx","../src/components/Grid/GroupPanel.tsx","../src/components/Grid/index.tsx"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\nimport { debounce } from \"lodash\";\n\n/**\n * Combines multiple class names and merges Tailwind CSS classes\n * @param inputs - Class names to combine\n * @returns Merged class string\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Creates a debounced function that delays invoking func until after wait milliseconds\n * @param func The function to debounce\n * @param wait The number of milliseconds to delay\n * @returns A debounced version of the function\n */\nexport const createDebouncedFunction = <T extends (...args: any[]) => any>(\n  func: T,\n  wait = 300\n) => {\n  return debounce(func, wait);\n};\n\n/**\n * Formats a date to a string\n * @param date The date to format\n * @returns Formatted date string\n */\nexport const formatDate = (date: Date): string => {\n  return date.toLocaleDateString();\n};\n\n/**\n * Checks if a value is empty (null, undefined, empty string, or empty array)\n * @param value The value to check\n * @returns True if the value is empty\n */\nexport const isEmpty = (value: any): boolean => {\n  if (value === null || value === undefined) return true;\n  if (typeof value === 'string') return value.trim().length === 0;\n  if (Array.isArray(value)) return value.length === 0;\n  return false;\n};\n","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div data-slot=\"table-container\" className=\"relative w-full h-[100%]\">\n    <table\n      ref={ref}\n      data-slot=\"table\"\n      className={cn(\"w-full caption-bottom text-sm h-[100%]\", className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead\n    ref={ref}\n    data-slot=\"table-header\"\n    className={cn(\"[&_tr]:border-b\", className)}\n    {...props}\n  />\n));\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    data-slot=\"table-body\"\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n));\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    data-slot=\"table-footer\"\n    className={cn(\n      \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    data-slot=\"table-row\"\n    className={cn(\n      \"data-[state=selected]:bg-muted border-b border-gray-200 transition-colors\",\n      className\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    data-slot=\"table-head\"\n    className={cn(\n      \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    data-slot=\"table-cell\"\n    className={cn(\n      \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n));\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    data-slot=\"table-caption\"\n    className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n    {...props}\n  />\n));\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n","import * as React from \"react\";\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\r\nimport { CheckIcon } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Define props using Radix primitive typing\r\ntype CheckboxProps = React.ComponentPropsWithoutRef<\r\n  typeof CheckboxPrimitive.Root\r\n>;\r\n\r\nfunction Checkbox({ className, ...props }: CheckboxProps) {\r\n  return (\r\n    <CheckboxPrimitive.Root\r\n      data-slot=\"checkbox\"\r\n      className={cn(\r\n        \"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <CheckboxPrimitive.Indicator\r\n        data-slot=\"checkbox-indicator\"\r\n        className=\"flex items-center justify-center text-current transition-none\"\r\n      >\r\n        <CheckIcon className=\"size-3.5\" />\r\n      </CheckboxPrimitive.Indicator>\r\n    </CheckboxPrimitive.Root>\r\n  );\r\n}\r\n\r\nexport { Checkbox };\r\n","import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nexport type InputProps = React.InputHTMLAttributes<HTMLInputElement>;\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        data-slot=\"input\"\n        className={cn(\n          \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as React from \"react\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\n// Define types for Radix components\ntype SelectProps = React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root>;\ntype SelectGroupProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Group\n>;\ntype SelectValueProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Value\n>;\ntype SelectTriggerProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Trigger\n> & {\n  className?: string;\n  size?: \"sm\" | \"default\";\n  children?: React.ReactNode;\n};\ntype SelectContentProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Content\n> & {\n  className?: string;\n  children?: React.ReactNode;\n  position?: \"popper\" | \"item-aligned\";\n};\ntype SelectLabelProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Label\n> & {\n  className?: string;\n};\ntype SelectItemProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Item\n> & {\n  className?: string;\n  children?: React.ReactNode;\n};\ntype SelectSeparatorProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.Separator\n> & {\n  className?: string;\n};\ntype ScrollButtonProps = React.ComponentPropsWithoutRef<\n  typeof SelectPrimitive.ScrollUpButton\n> & {\n  className?: string;\n};\n\nfunction Select(props: SelectProps) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\n}\n\nfunction SelectGroup(props: SelectGroupProps) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\n}\n\nfunction SelectValue(props: SelectValueProps) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: SelectTriggerProps) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  );\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: SelectContentProps) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  );\n}\n\nfunction SelectLabel({ className, ...props }: SelectLabelProps) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectItem({ className, children, ...props }: SelectItemProps) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n}\n\nfunction SelectSeparator({ className, ...props }: SelectSeparatorProps) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction SelectScrollUpButton({ className, ...props }: ScrollButtonProps) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  );\n}\n\nfunction SelectScrollDownButton({ className, ...props }: ScrollButtonProps) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  );\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n};\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants } ","import * as React from \"react\";\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Extend types from Radix primitives for strong typing\r\ntype PopoverProps = React.ComponentPropsWithoutRef<\r\n  typeof PopoverPrimitive.Root\r\n>;\r\ntype PopoverTriggerProps = React.ComponentPropsWithoutRef<\r\n  typeof PopoverPrimitive.Trigger\r\n>;\r\ntype PopoverContentProps = React.ComponentPropsWithoutRef<\r\n  typeof PopoverPrimitive.Content\r\n> & {\r\n  className?: string;\r\n  align?: \"start\" | \"center\" | \"end\";\r\n  sideOffset?: number;\r\n};\r\ntype PopoverAnchorProps = React.ComponentPropsWithoutRef<\r\n  typeof PopoverPrimitive.Anchor\r\n>;\r\n\r\nfunction Popover(props: PopoverProps) {\r\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\r\n}\r\n\r\nfunction PopoverTrigger(props: PopoverTriggerProps) {\r\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\r\n}\r\n\r\nfunction PopoverContent({\r\n  className,\r\n  align = \"center\",\r\n  sideOffset = 4,\r\n  ...props\r\n}: PopoverContentProps) {\r\n  return (\r\n    <PopoverPrimitive.Portal>\r\n      <PopoverPrimitive.Content\r\n        data-slot=\"popover-content\"\r\n        align={align}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-[--radix-popover-content-transform-origin] rounded-md border p-4 shadow-md outline-hidden\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </PopoverPrimitive.Portal>\r\n  );\r\n}\r\n\r\nfunction PopoverAnchor(props: PopoverAnchorProps) {\r\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\r\n","import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\nimport { cn } from \"@/lib/utils\"\n\n// ⬅️ Move ScrollBar component first\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\n// ⬇️ ScrollArea defined after ScrollBar\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nexport { ScrollArea, ScrollBar }\n","import * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Calendar as CalendarIcon } from \"lucide-react\";\nimport {\n  endOfHour,\n  endOfMinute,\n  format,\n  parse,\n  getMonth,\n  getYear,\n  setHours,\n  setMinutes,\n  setMonth as setMonthFns,\n  setSeconds,\n  setYear,\n  startOfHour,\n  startOfMinute,\n  startOfYear,\n  startOfMonth,\n  endOfMonth,\n  endOfYear,\n  addMonths,\n  subMonths,\n  setMilliseconds,\n  addHours,\n  subHours,\n  startOfDay,\n  endOfDay,\n} from \"date-fns\";\nimport {\n  CheckIcon,\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n  Clock,\n  XCircle,\n} from \"lucide-react\";\nimport { DayPicker, Matcher, TZDate } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button, buttonVariants } from \"@/components/ui/button\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\n\nexport type CalendarProps = Omit<\n  React.ComponentProps<typeof DayPicker>,\n  \"mode\"\n>;\n\nconst AM_VALUE = 0;\nconst PM_VALUE = 1;\n\nexport type DateTimePickerProps = {\n  /**\n   * The modality of the popover. When set to true, interaction with outside elements will be disabled and only popover content will be visible to screen readers.\n   * If you want to use the datetime picker inside a dialog, you should set this to true.\n   * @default false\n   */\n  modal?: boolean;\n  /**\n   * The datetime value to display and control.\n   */\n  value: Date | undefined;\n  /**\n   * Callback function to handle datetime changes.\n   */\n  onChange: (date: Date | undefined) => void;\n  /**\n   * The minimum datetime value allowed.\n   * @default undefined\n   */\n  min?: Date;\n  /**\n   * The maximum datetime value allowed.\n   */\n  max?: Date;\n  /**\n   * The timezone to display the datetime in, based on the date-fns.\n   * For a complete list of valid time zone identifiers, refer to:\n   * https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n   * @default undefined\n   */\n  timezone?: string;\n  /**\n   * Whether the datetime picker is disabled.\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * Whether to show the time picker.\n   * @default false\n   */\n  hideTime?: boolean;\n  /**\n   * Whether to use 12-hour format.\n   * @default false\n   */\n  use12HourFormat?: boolean;\n  /**\n   * Whether to show the clear button.\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * Custom class names for the component.\n   */\n  classNames?: {\n    /**\n     * Custom class names for the trigger (the button that opens the picker).\n     */\n    trigger?: string;\n  };\n  timePicker?: {\n    hour?: boolean;\n    minute?: boolean;\n    second?: boolean;\n  };\n  /**\n   * Custom render function for the trigger.\n   */\n  renderTrigger?: (props: DateTimeRenderTriggerProps) => React.ReactNode;\n};\n\nexport type DateTimeRenderTriggerProps = {\n  value: Date | undefined;\n  open: boolean;\n  timezone?: string;\n  disabled?: boolean;\n  use12HourFormat?: boolean;\n  setOpen: (open: boolean) => void;\n};\n\nexport function DateTimePicker({\n  value,\n  onChange,\n  renderTrigger,\n  min,\n  max,\n  timezone,\n  hideTime,\n  use12HourFormat,\n  disabled,\n  clearable,\n  classNames,\n  timePicker,\n  modal = false,\n  ...props\n}: DateTimePickerProps & CalendarProps) {\n  const [open, setOpen] = useState(false);\n  const [monthYearPicker, setMonthYearPicker] = useState<\n    \"month\" | \"year\" | false\n  >(false);\n  const initDate = useMemo(\n    () => new TZDate(value || new Date(), timezone),\n    [value, timezone]\n  );\n\n  const [month, setMonth] = useState<Date>(initDate);\n  const [date, setDate] = useState<Date>(initDate);\n\n  const endMonth = useMemo(() => {\n    return setYear(month, getYear(month) + 1);\n  }, [month]);\n  const minDate = useMemo(\n    () => (min ? new TZDate(min, timezone) : undefined),\n    [min, timezone]\n  );\n  const maxDate = useMemo(\n    () => (max ? new TZDate(max, timezone) : undefined),\n    [max, timezone]\n  );\n\n  const onDayChanged = useCallback(\n    (d: Date) => {\n      d.setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n      if (min && d < min) {\n        d.setHours(min.getHours(), min.getMinutes(), min.getSeconds());\n      }\n      if (max && d > max) {\n        d.setHours(max.getHours(), max.getMinutes(), max.getSeconds());\n      }\n      setDate(d);\n    },\n    [setDate, setMonth]\n  );\n  const onSubmit = useCallback(() => {\n    onChange(new Date(date));\n    setOpen(false);\n  }, [date, onChange]);\n\n  const onMonthYearChanged = useCallback(\n    (d: Date, mode: \"month\" | \"year\") => {\n      setMonth(d);\n      if (mode === \"year\") {\n        setMonthYearPicker(\"month\");\n      } else {\n        setMonthYearPicker(false);\n      }\n    },\n    [setMonth, setMonthYearPicker]\n  );\n  const onNextMonth = useCallback(() => {\n    setMonth(addMonths(month, 1));\n  }, [month]);\n  const onPrevMonth = useCallback(() => {\n    setMonth(subMonths(month, 1));\n  }, [month]);\n\n  useEffect(() => {\n    if (open) {\n      setDate(initDate);\n      setMonth(initDate);\n      setMonthYearPicker(false);\n    }\n  }, [open, initDate]);\n\n  const displayValue = useMemo(() => {\n    if (!open && !value) return value;\n    return open ? date : initDate;\n  }, [date, value, open]);\n\n  const dislayFormat = useMemo(() => {\n    if (!displayValue) return \"Pick a date\";\n    return format(\n      displayValue,\n      `${!hideTime ? \"MMM\" : \"MMMM\"} d, yyyy${\n        !hideTime ? (use12HourFormat ? \" hh:mm:ss a\" : \" HH:mm:ss\") : \"\"\n      }`\n    );\n  }, [displayValue, hideTime, use12HourFormat]);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen} modal={modal}>\n      <PopoverTrigger asChild>\n        {renderTrigger ? (\n          renderTrigger({\n            value: displayValue,\n            open,\n            timezone,\n            disabled,\n            use12HourFormat,\n            setOpen,\n          })\n        ) : (\n          <div\n            className={cn(\n              \"flex w-full cursor-pointer items-center h-9 ps-3 pe-1 font-normal border border-input rounded-md text-sm shadow-sm\",\n              !displayValue && \"text-muted-foreground\",\n              (!clearable || !value) && \"pe-3\",\n              disabled && \"opacity-50 cursor-not-allowed\",\n              classNames?.trigger\n            )}\n            tabIndex={0}\n          >\n            <div className=\"flex-grow flex items-center\">\n              <CalendarIcon className=\"mr-2 size-4\" />\n              {dislayFormat}\n            </div>\n            {clearable && value && (\n              <Button\n                disabled={disabled}\n                variant=\"ghost\"\n                size=\"sm\"\n                role=\"button\"\n                aria-label=\"Clear date\"\n                className=\"size-6 p-1 ms-1\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  e.preventDefault();\n                  onChange(undefined);\n                  setOpen(false);\n                }}\n              >\n                <XCircle className=\"size-4\" />\n              </Button>\n            )}\n          </div>\n        )}\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-2\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-md font-bold ms-2 flex items-center cursor-pointer\">\n            <div>\n              <span\n                onClick={() =>\n                  setMonthYearPicker(\n                    monthYearPicker === \"month\" ? false : \"month\"\n                  )\n                }\n              >\n                {format(month, \"MMMM\")}\n              </span>\n              <span\n                className=\"ms-1\"\n                onClick={() =>\n                  setMonthYearPicker(\n                    monthYearPicker === \"year\" ? false : \"year\"\n                  )\n                }\n              >\n                {format(month, \"yyyy\")}\n              </span>\n            </div>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() =>\n                setMonthYearPicker(monthYearPicker ? false : \"year\")\n              }\n            >\n              {monthYearPicker ? <ChevronUpIcon /> : <ChevronDownIcon />}\n            </Button>\n          </div>\n          <div\n            className={cn(\"flex space-x-2\", monthYearPicker ? \"hidden\" : \"\")}\n          >\n            <Button variant=\"ghost\" size=\"icon\" onClick={onPrevMonth}>\n              <ChevronLeftIcon />\n            </Button>\n            <Button variant=\"ghost\" size=\"icon\" onClick={onNextMonth}>\n              <ChevronRightIcon />\n            </Button>\n          </div>\n        </div>\n        <div className=\"relative overflow-hidden\">\n          <DayPicker\n            timeZone={timezone}\n            mode=\"single\"\n            selected={date}\n            onSelect={(d) => d && onDayChanged(d)}\n            month={month}\n            endMonth={endMonth}\n            disabled={\n              [\n                max ? { after: max } : null,\n                min ? { before: min } : null,\n              ].filter(Boolean) as Matcher[]\n            }\n            onMonthChange={setMonth}\n            classNames={{\n              dropdowns: \"flex w-full gap-2\",\n              months: \"flex w-full h-fit\",\n              month: \"flex flex-col w-full\",\n              month_caption: \"hidden\",\n              button_previous: \"hidden\",\n              button_next: \"hidden\",\n              month_grid: \"w-full border-collapse\",\n              weekdays: \"flex justify-between mt-2\",\n              weekday:\n                \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n              week: \"flex w-full justify-between mt-2\",\n              day: \"h-9 w-9 text-center text-sm p-0 relative flex items-center justify-center [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 rounded-1\",\n              day_button: cn(\n                buttonVariants({ variant: \"ghost\" }),\n                \"size-9 rounded-md p-0 font-normal aria-selected:opacity-100\"\n              ),\n              range_end: \"day-range-end\",\n              selected:\n                \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground rounded-l-md rounded-r-md\",\n              today: \"bg-accent text-accent-foreground\",\n              outside:\n                \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n              disabled: \"text-muted-foreground opacity-50\",\n              range_middle:\n                \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n              hidden: \"invisible\",\n            }}\n            showOutsideDays={true}\n            {...props}\n          />\n          <div\n            className={cn(\n              \"absolute top-0 left-0 bottom-0 right-0\",\n              monthYearPicker ? \"bg-popover\" : \"hidden\"\n            )}\n          ></div>\n          <MonthYearPicker\n            value={month}\n            mode={monthYearPicker as any}\n            onChange={onMonthYearChanged}\n            minDate={minDate}\n            maxDate={maxDate}\n            className={cn(\n              \"absolute top-0 left-0 bottom-0 right-0\",\n              monthYearPicker ? \"\" : \"hidden\"\n            )}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          {!hideTime && (\n            <TimePicker\n              timePicker={timePicker}\n              value={date}\n              onChange={setDate}\n              use12HourFormat={use12HourFormat}\n              min={minDate}\n              max={maxDate}\n            />\n          )}\n          <div className=\"flex flex-row-reverse items-center justify-between\">\n            <Button className=\"ms-2 h-7 px-2\" onClick={onSubmit}>\n              Done\n            </Button>\n            {timezone && (\n              <div className=\"text-sm\">\n                <span>Timezone:</span>\n                <span className=\"font-semibold ms-1\">{timezone}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nfunction MonthYearPicker({\n  value,\n  minDate,\n  maxDate,\n  mode = \"month\",\n  onChange,\n  className,\n}: {\n  value: Date;\n  mode: \"month\" | \"year\";\n  minDate?: Date;\n  maxDate?: Date;\n  onChange: (value: Date, mode: \"month\" | \"year\") => void;\n  className?: string;\n}) {\n  const yearRef = useRef<HTMLDivElement>(null);\n  const years = useMemo(() => {\n    const years: TimeOption[] = [];\n    for (let i = 1912; i < 2100; i++) {\n      let disabled = false;\n      const startY = startOfYear(setYear(value, i));\n      const endY = endOfYear(setYear(value, i));\n      if (minDate && endY < minDate) disabled = true;\n      if (maxDate && startY > maxDate) disabled = true;\n      years.push({ value: i, label: i.toString(), disabled });\n    }\n    return years;\n  }, [value]);\n  const months = useMemo(() => {\n    const months: TimeOption[] = [];\n    for (let i = 0; i < 12; i++) {\n      let disabled = false;\n      const startM = startOfMonth(setMonthFns(value, i));\n      const endM = endOfMonth(setMonthFns(value, i));\n      if (minDate && endM < minDate) disabled = true;\n      if (maxDate && startM > maxDate) disabled = true;\n      months.push({ value: i, label: format(new Date(0, i), \"MMM\"), disabled });\n    }\n    return months;\n  }, [value]);\n\n  const onYearChange = useCallback(\n    (v: TimeOption) => {\n      let newDate = setYear(value, v.value);\n      if (minDate && newDate < minDate) {\n        newDate = setMonthFns(newDate, getMonth(minDate));\n      }\n      if (maxDate && newDate > maxDate) {\n        newDate = setMonthFns(newDate, getMonth(maxDate));\n      }\n      onChange(newDate, \"year\");\n    },\n    [onChange, value, minDate, maxDate]\n  );\n\n  useEffect(() => {\n    if (mode === \"year\") {\n      yearRef.current?.scrollIntoView({ behavior: \"auto\", block: \"center\" });\n    }\n  }, [mode, value]);\n  return (\n    <div className={cn(className)}>\n      <ScrollArea className=\"h-full\">\n        {mode === \"year\" && (\n          <div className=\"grid grid-cols-4\">\n            {years.map((year) => (\n              <div\n                key={year.value}\n                ref={year.value === getYear(value) ? yearRef : undefined}\n              >\n                <Button\n                  disabled={year.disabled}\n                  variant={getYear(value) === year.value ? \"default\" : \"ghost\"}\n                  className=\"rounded-full\"\n                  onClick={() => onYearChange(year)}\n                >\n                  {year.label}\n                </Button>\n              </div>\n            ))}\n          </div>\n        )}\n        {mode === \"month\" && (\n          <div className=\"grid grid-cols-3 gap-4\">\n            {months.map((month) => (\n              <Button\n                key={month.value}\n                size=\"lg\"\n                disabled={month.disabled}\n                variant={getMonth(value) === month.value ? \"default\" : \"ghost\"}\n                className=\"rounded-full\"\n                onClick={() =>\n                  onChange(setMonthFns(value, month.value), \"month\")\n                }\n              >\n                {month.label}\n              </Button>\n            ))}\n          </div>\n        )}\n      </ScrollArea>\n    </div>\n  );\n}\n\ninterface TimeOption {\n  value: number;\n  label: string;\n  disabled: boolean;\n}\n\nfunction TimePicker({\n  value,\n  onChange,\n  use12HourFormat,\n  min,\n  max,\n  timePicker,\n}: {\n  use12HourFormat?: boolean;\n  value: Date;\n  onChange: (date: Date) => void;\n  min?: Date;\n  max?: Date;\n  timePicker?: DateTimePickerProps[\"timePicker\"];\n}) {\n  // hours24h = HH\n  // hours12h = hh\n  const formatStr = useMemo(\n    () =>\n      use12HourFormat\n        ? \"yyyy-MM-dd hh:mm:ss.SSS a xxxx\"\n        : \"yyyy-MM-dd HH:mm:ss.SSS xxxx\",\n    [use12HourFormat]\n  );\n  const [ampm, setAmpm] = useState(\n    format(value, \"a\") === \"AM\" ? AM_VALUE : PM_VALUE\n  );\n  const [hour, setHour] = useState(\n    use12HourFormat ? +format(value, \"hh\") : value.getHours()\n  );\n  const [minute, setMinute] = useState(value.getMinutes());\n  const [second, setSecond] = useState(value.getSeconds());\n\n  useEffect(() => {\n    onChange(\n      buildTime({\n        use12HourFormat,\n        value,\n        formatStr,\n        hour,\n        minute,\n        second,\n        ampm,\n      })\n    );\n  }, [hour, minute, second, ampm, formatStr, use12HourFormat]);\n\n  const _hourIn24h = useMemo(() => {\n    // if (use12HourFormat) {\n    //   return (hour % 12) + ampm * 12;\n    // }\n    return use12HourFormat ? (hour % 12) + ampm * 12 : hour;\n  }, [value, use12HourFormat, ampm]);\n\n  const hours: TimeOption[] = useMemo(\n    () =>\n      Array.from({ length: use12HourFormat ? 12 : 24 }, (_, i) => {\n        let disabled = false;\n        const hourValue = use12HourFormat ? (i === 0 ? 12 : i) : i;\n        const hDate = setHours(value, use12HourFormat ? i + ampm * 12 : i);\n        const hStart = startOfHour(hDate);\n        const hEnd = endOfHour(hDate);\n        if (min && hEnd < min) disabled = true;\n        if (max && hStart > max) disabled = true;\n        return {\n          value: hourValue,\n          label: hourValue.toString().padStart(2, \"0\"),\n          disabled,\n        };\n      }),\n    [value, min, max, use12HourFormat, ampm]\n  );\n  const minutes: TimeOption[] = useMemo(() => {\n    const anchorDate = setHours(value, _hourIn24h);\n    return Array.from({ length: 60 }, (_, i) => {\n      let disabled = false;\n      const mDate = setMinutes(anchorDate, i);\n      const mStart = startOfMinute(mDate);\n      const mEnd = endOfMinute(mDate);\n      if (min && mEnd < min) disabled = true;\n      if (max && mStart > max) disabled = true;\n      return {\n        value: i,\n        label: i.toString().padStart(2, \"0\"),\n        disabled,\n      };\n    });\n  }, [value, min, max, _hourIn24h]);\n  const seconds: TimeOption[] = useMemo(() => {\n    const anchorDate = setMilliseconds(\n      setMinutes(setHours(value, _hourIn24h), minute),\n      0\n    );\n    const _min = min ? setMilliseconds(min, 0) : undefined;\n    const _max = max ? setMilliseconds(max, 0) : undefined;\n    return Array.from({ length: 60 }, (_, i) => {\n      let disabled = false;\n      const sDate = setSeconds(anchorDate, i);\n      if (_min && sDate < _min) disabled = true;\n      if (_max && sDate > _max) disabled = true;\n      return {\n        value: i,\n        label: i.toString().padStart(2, \"0\"),\n        disabled,\n      };\n    });\n  }, [value, minute, min, max, _hourIn24h]);\n  const ampmOptions = useMemo(() => {\n    const startD = startOfDay(value);\n    const endD = endOfDay(value);\n    return [\n      { value: AM_VALUE, label: \"AM\" },\n      { value: PM_VALUE, label: \"PM\" },\n    ].map((v) => {\n      let disabled = false;\n      const start = addHours(startD, v.value * 12);\n      const end = subHours(endD, (1 - v.value) * 12);\n      if (min && end < min) disabled = true;\n      if (max && start > max) disabled = true;\n      return { ...v, disabled };\n    });\n  }, [value, min, max]);\n\n  const [open, setOpen] = useState(false);\n\n  const hourRef = useRef<HTMLDivElement>(null);\n  const minuteRef = useRef<HTMLDivElement>(null);\n  const secondRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (open) {\n        hourRef.current?.scrollIntoView({ behavior: \"auto\" });\n        minuteRef.current?.scrollIntoView({ behavior: \"auto\" });\n        secondRef.current?.scrollIntoView({ behavior: \"auto\" });\n      }\n    }, 1);\n    return () => clearTimeout(timeoutId);\n  }, [open]);\n\n  const onHourChange = useCallback(\n    (v: TimeOption) => {\n      if (min) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime < min) {\n          setMinute(min.getMinutes());\n          setSecond(min.getSeconds());\n        }\n      }\n      if (max) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime > max) {\n          setMinute(max.getMinutes());\n          setSecond(max.getSeconds());\n        }\n      }\n      setHour(v.value);\n    },\n    [setHour, use12HourFormat, value, formatStr, minute, second, ampm]\n  );\n\n  const onMinuteChange = useCallback(\n    (v: TimeOption) => {\n      if (min) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime < min) {\n          setSecond(min.getSeconds());\n        }\n      }\n      if (max) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime > max) {\n          setSecond(newTime.getSeconds());\n        }\n      }\n      setMinute(v.value);\n    },\n    [setMinute, use12HourFormat, value, formatStr, hour, second, ampm]\n  );\n\n  const onAmpmChange = useCallback(\n    (v: TimeOption) => {\n      if (min) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour,\n          minute,\n          second,\n          ampm: v.value,\n        });\n        if (newTime < min) {\n          const minH = min.getHours() % 12;\n          setHour(minH === 0 ? 12 : minH);\n          setMinute(min.getMinutes());\n          setSecond(min.getSeconds());\n        }\n      }\n      if (max) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour,\n          minute,\n          second,\n          ampm: v.value,\n        });\n        if (newTime > max) {\n          const maxH = max.getHours() % 12;\n          setHour(maxH === 0 ? 12 : maxH);\n          setMinute(max.getMinutes());\n          setSecond(max.getSeconds());\n        }\n      }\n      setAmpm(v.value);\n    },\n    [setAmpm, use12HourFormat, value, formatStr, hour, minute, second, min, max]\n  );\n\n  const display = useMemo(() => {\n    let arr = [];\n    for (const element of [\"hour\", \"minute\", \"second\"]) {\n      if (!timePicker || timePicker[element as keyof typeof timePicker]) {\n        if (element === \"hour\") {\n          arr.push(use12HourFormat ? \"hh\" : \"HH\");\n        } else {\n          arr.push(element === \"minute\" ? \"mm\" : \"ss\");\n        }\n      }\n    }\n    return format(value, arr.join(\":\") + (use12HourFormat ? \" a\" : \"\"));\n  }, [value, use12HourFormat, timePicker]);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant=\"outline\"\n          role=\"combobox\"\n          aria-expanded={open}\n          className=\"justify-between\"\n        >\n          <Clock className=\"mr-2 size-4\" />\n          {display}\n          <ChevronDownIcon className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"p-0\" side=\"top\">\n        <div className=\"flex-col gap-2 p-2\">\n          <div className=\"flex h-56 grow\">\n            {(!timePicker || timePicker.hour) && (\n              <ScrollArea className=\"h-full flex-grow\">\n                <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2 pb-48\">\n                  {hours.map((v) => (\n                    <div\n                      key={v.value}\n                      ref={v.value === hour ? hourRef : undefined}\n                    >\n                      <TimeItem\n                        option={v}\n                        selected={v.value === hour}\n                        onSelect={onHourChange}\n                        className=\"h-8\"\n                        disabled={v.disabled}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n            {(!timePicker || timePicker.minute) && (\n              <ScrollArea className=\"h-full flex-grow\">\n                <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2 pb-48\">\n                  {minutes.map((v) => (\n                    <div\n                      key={v.value}\n                      ref={v.value === minute ? minuteRef : undefined}\n                    >\n                      <TimeItem\n                        option={v}\n                        selected={v.value === minute}\n                        onSelect={onMinuteChange}\n                        className=\"h-8\"\n                        disabled={v.disabled}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n            {(!timePicker || timePicker.second) && (\n              <ScrollArea className=\"h-full flex-grow\">\n                <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2 pb-48\">\n                  {seconds.map((v) => (\n                    <div\n                      key={v.value}\n                      ref={v.value === second ? secondRef : undefined}\n                    >\n                      <TimeItem\n                        option={v}\n                        selected={v.value === second}\n                        onSelect={(v) => setSecond(v.value)}\n                        className=\"h-8\"\n                        disabled={v.disabled}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n            {use12HourFormat && (\n              <ScrollArea className=\"h-full flex-grow\">\n                <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2\">\n                  {ampmOptions.map((v) => (\n                    <TimeItem\n                      key={v.value}\n                      option={v}\n                      selected={v.value === ampm}\n                      onSelect={onAmpmChange}\n                      className=\"h-8\"\n                      disabled={v.disabled}\n                    />\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nconst TimeItem = ({\n  option,\n  selected,\n  onSelect,\n  className,\n  disabled,\n}: {\n  option: TimeOption;\n  selected: boolean;\n  onSelect: (option: TimeOption) => void;\n  className?: string;\n  disabled?: boolean;\n}) => {\n  return (\n    <Button\n      variant=\"ghost\"\n      className={cn(\"flex justify-center px-1 pe-2 ps-1\", className)}\n      onClick={() => onSelect(option)}\n      disabled={disabled}\n    >\n      <div className=\"w-4\">\n        {selected && <CheckIcon className=\"my-auto size-4\" />}\n      </div>\n      <span className=\"ms-2\">{option.label}</span>\n    </Button>\n  );\n};\n\ninterface BuildTimeOptions {\n  use12HourFormat?: boolean;\n  value: Date;\n  formatStr: string;\n  hour: number;\n  minute: number;\n  second: number;\n  ampm: number;\n}\n\nfunction buildTime(options: BuildTimeOptions) {\n  const { use12HourFormat, value, formatStr, hour, minute, second, ampm } =\n    options;\n  let date: Date;\n  if (use12HourFormat) {\n    const dateStrRaw = format(value, formatStr);\n    // yyyy-MM-dd hh:mm:ss.SSS a zzzz\n    // 2024-10-14 01:20:07.524 AM GMT+00:00\n    let dateStr =\n      dateStrRaw.slice(0, 11) +\n      hour.toString().padStart(2, \"0\") +\n      dateStrRaw.slice(13);\n    dateStr =\n      dateStr.slice(0, 14) +\n      minute.toString().padStart(2, \"0\") +\n      dateStr.slice(16);\n    dateStr =\n      dateStr.slice(0, 17) +\n      second.toString().padStart(2, \"0\") +\n      dateStr.slice(19);\n    dateStr =\n      dateStr.slice(0, 24) +\n      (ampm == AM_VALUE ? \"AM\" : \"PM\") +\n      dateStr.slice(26);\n    date = parse(dateStr, formatStr, value);\n  } else {\n    date = setHours(setMinutes(setSeconds(value, second), minute), hour);\n  }\n  return date;\n}\n","/**\n * Simple Time Picker\n * Check out the live demo at https://shadcn-datetime-picker-pro.vercel.app/\n * Find the latest source code at https://github.com/huybuidac/shadcn-datetime-picker\n */\nimport * as React from \"react\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\nimport { Clock, ChevronDownIcon, CheckIcon } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport {\n  format,\n  parse,\n  setHours,\n  startOfHour,\n  endOfHour,\n  setMinutes,\n  startOfMinute,\n  endOfMinute,\n  setSeconds,\n  startOfDay,\n  endOfDay,\n  addHours,\n  subHours,\n  setMilliseconds,\n} from \"date-fns\";\n\ninterface SimpleTimeOption {\n  value: any;\n  label: string;\n  disabled?: boolean;\n}\n\nconst AM_VALUE = 0;\nconst PM_VALUE = 1;\n\nexport function SimpleTimePicker({\n  value,\n  onChange,\n  use12HourFormat,\n  min,\n  max,\n  disabled,\n  modal,\n  onSubmit,\n}: {\n  use12HourFormat?: boolean;\n  value: Date;\n  onChange: (date: Date) => void;\n  min?: Date;\n  max?: Date;\n  disabled?: boolean;\n  className?: string;\n  modal?: boolean;\n  onSubmit?: (value: Date) => void;\n}) {\n  // hours24h = HH\n  // hours12h = hh\n  const formatStr = useMemo(\n    () =>\n      use12HourFormat\n        ? \"yyyy-MM-dd hh:mm:ss.SSS a xxxx\"\n        : \"yyyy-MM-dd HH:mm:ss.SSS xxxx\",\n    [use12HourFormat]\n  );\n  const [ampm, setAmpm] = useState(\n    format(value, \"a\") === \"AM\" ? AM_VALUE : PM_VALUE\n  );\n  const [hour, setHour] = useState(\n    use12HourFormat ? +format(value, \"hh\") : value.getHours()\n  );\n  const [minute, setMinute] = useState(value.getMinutes());\n  const [second, setSecond] = useState(value.getSeconds());\n\n  useEffect(() => {\n    onChange(\n      buildTime({\n        use12HourFormat,\n        value,\n        formatStr,\n        hour,\n        minute,\n        second,\n        ampm,\n      })\n    );\n  }, [hour, minute, second, ampm, formatStr, use12HourFormat]);\n\n  const _hourIn24h = useMemo(() => {\n    return use12HourFormat ? (hour % 12) + ampm * 12 : hour;\n  }, [hour, use12HourFormat, ampm]);\n\n  const hours: SimpleTimeOption[] = useMemo(\n    () =>\n      Array.from({ length: use12HourFormat ? 12 : 24 }, (_, i) => {\n        let disabled = false;\n        const hourValue = use12HourFormat ? (i === 0 ? 12 : i) : i;\n        const hDate = setHours(value, use12HourFormat ? i + ampm * 12 : i);\n        const hStart = startOfHour(hDate);\n        const hEnd = endOfHour(hDate);\n        if (min && hEnd < min) disabled = true;\n        if (max && hStart > max) disabled = true;\n        return {\n          value: hourValue,\n          label: hourValue.toString().padStart(2, \"0\"),\n          disabled,\n        };\n      }),\n    [value, min, max, use12HourFormat, ampm]\n  );\n  const minutes: SimpleTimeOption[] = useMemo(() => {\n    const anchorDate = setHours(value, _hourIn24h);\n    return Array.from({ length: 60 }, (_, i) => {\n      let disabled = false;\n      const mDate = setMinutes(anchorDate, i);\n      const mStart = startOfMinute(mDate);\n      const mEnd = endOfMinute(mDate);\n      if (min && mEnd < min) disabled = true;\n      if (max && mStart > max) disabled = true;\n      return {\n        value: i,\n        label: i.toString().padStart(2, \"0\"),\n        disabled,\n      };\n    });\n  }, [value, min, max, _hourIn24h]);\n  const seconds: SimpleTimeOption[] = useMemo(() => {\n    const anchorDate = setMilliseconds(\n      setMinutes(setHours(value, _hourIn24h), minute),\n      0\n    );\n    const _min = min ? setMilliseconds(min, 0) : undefined;\n    const _max = max ? setMilliseconds(max, 0) : undefined;\n    return Array.from({ length: 60 }, (_, i) => {\n      let disabled = false;\n      const sDate = setSeconds(anchorDate, i);\n      if (_min && sDate < _min) disabled = true;\n      if (_max && sDate > _max) disabled = true;\n      return {\n        value: i,\n        label: i.toString().padStart(2, \"0\"),\n        disabled,\n      };\n    });\n  }, [value, minute, min, max, _hourIn24h]);\n  const ampmOptions = useMemo(() => {\n    const startD = startOfDay(value);\n    const endD = endOfDay(value);\n    return [\n      { value: AM_VALUE, label: \"AM\" },\n      { value: PM_VALUE, label: \"PM\" },\n    ].map((v) => {\n      let disabled = false;\n      const start = addHours(startD, v.value * 12);\n      const end = subHours(endD, (1 - v.value) * 12);\n      if (min && end < min) disabled = true;\n      if (max && start > max) disabled = true;\n      return { ...v, disabled };\n    });\n  }, [value, min, max]);\n\n  const [open, setOpen] = useState(false);\n\n  const hourRef = useRef<HTMLDivElement>(null);\n  const minuteRef = useRef<HTMLDivElement>(null);\n  const secondRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (open) {\n        hourRef.current?.scrollIntoView({ behavior: \"auto\" });\n        minuteRef.current?.scrollIntoView({ behavior: \"auto\" });\n        secondRef.current?.scrollIntoView({ behavior: \"auto\" });\n      }\n    }, 1);\n    return () => clearTimeout(timeoutId);\n  }, [open]);\n  const onHourChange = useCallback(\n    (v: SimpleTimeOption) => {\n      if (min) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime < min) {\n          setMinute(min.getMinutes());\n          setSecond(min.getSeconds());\n        }\n      }\n      if (max) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime > max) {\n          setMinute(max.getMinutes());\n          setSecond(max.getSeconds());\n        }\n      }\n      setHour(v.value);\n    },\n    [setHour, use12HourFormat, value, formatStr, minute, second, ampm]\n  );\n\n  const onMinuteChange = useCallback(\n    (v: SimpleTimeOption) => {\n      if (min) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime < min) {\n          setSecond(min.getSeconds());\n        }\n      }\n      if (max) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour: v.value,\n          minute,\n          second,\n          ampm,\n        });\n        if (newTime > max) {\n          setSecond(newTime.getSeconds());\n        }\n      }\n      setMinute(v.value);\n    },\n    [setMinute, use12HourFormat, value, formatStr, hour, second, ampm]\n  );\n\n  const onAmpmChange = useCallback(\n    (v: SimpleTimeOption) => {\n      if (min) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour,\n          minute,\n          second,\n          ampm: v.value,\n        });\n        if (newTime < min) {\n          const minH = min.getHours() % 12;\n          setHour(minH === 0 ? 12 : minH);\n          setMinute(min.getMinutes());\n          setSecond(min.getSeconds());\n        }\n      }\n      if (max) {\n        let newTime = buildTime({\n          use12HourFormat,\n          value,\n          formatStr,\n          hour,\n          minute,\n          second,\n          ampm: v.value,\n        });\n        if (newTime > max) {\n          const maxH = max.getHours() % 12;\n          setHour(maxH === 0 ? 12 : maxH);\n          setMinute(max.getMinutes());\n          setSecond(max.getSeconds());\n        }\n      }\n      setAmpm(v.value);\n    },\n    [setAmpm, use12HourFormat, value, formatStr, hour, minute, second, min, max]\n  );\n\n  const display = useMemo(() => {\n    return format(value, use12HourFormat ? \"hh:mm:ss a\" : \"HH:mm:ss\");\n  }, [value, use12HourFormat]);\n\n  return (\n    <Popover open={open} onOpenChange={setOpen} modal={modal}>\n      <PopoverTrigger asChild>\n        <div\n          role=\"combobox\"\n          aria-expanded={open}\n          className={cn(\n            \"flex h-9 px-3 items-center justify-between cursor-pointer font-normal border border-input rounded-md text-sm shadow-sm\",\n            disabled && \"opacity-50 cursor-not-allowed\"\n          )}\n          tabIndex={0}\n        >\n          <Clock className=\"mr-2 size-4\" />\n          {display}\n          <ChevronDownIcon className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </div>\n      </PopoverTrigger>\n      <PopoverContent className=\"p-0\" side=\"top\">\n        <div className=\"flex-col gap-2 p-2\">\n          <div className=\"flex h-56 grow\">\n            <ScrollArea className=\"h-full flex-grow\">\n              <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2 pb-48\">\n                {hours.map((v) => (\n                  <div\n                    ref={v.value === hour ? hourRef : undefined}\n                    key={v.value}\n                  >\n                    <TimeItem\n                      option={v}\n                      selected={v.value === hour}\n                      onSelect={onHourChange}\n                      disabled={v.disabled}\n                      className=\"h-8\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </ScrollArea>\n            <ScrollArea className=\"h-full flex-grow\">\n              <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2 pb-48\">\n                {minutes.map((v) => (\n                  <div\n                    ref={v.value === minute ? minuteRef : undefined}\n                    key={v.value}\n                  >\n                    <TimeItem\n                      option={v}\n                      selected={v.value === minute}\n                      onSelect={onMinuteChange}\n                      disabled={v.disabled}\n                      className=\"h-8\"\n                    />\n                  </div>\n                ))}\n              </div>\n            </ScrollArea>\n            <ScrollArea className=\"h-full flex-grow\">\n              <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2 pb-48\">\n                {seconds.map((v) => (\n                  <div\n                    ref={v.value === second ? secondRef : undefined}\n                    key={v.value}\n                  >\n                    <TimeItem\n                      option={v}\n                      selected={v.value === second}\n                      onSelect={(v) => setSecond(v.value)}\n                      className=\"h-8\"\n                      disabled={v.disabled}\n                    />\n                  </div>\n                ))}\n              </div>\n            </ScrollArea>\n            {use12HourFormat && (\n              <ScrollArea className=\"h-full flex-grow\">\n                <div className=\"flex grow flex-col items-stretch overflow-y-auto pe-2\">\n                  {ampmOptions.map((v) => (\n                    <TimeItem\n                      key={v.value}\n                      option={v}\n                      selected={v.value === ampm}\n                      onSelect={onAmpmChange}\n                      className=\"h-8\"\n                      disabled={v.disabled}\n                    />\n                  ))}\n                </div>\n              </ScrollArea>\n            )}\n          </div>\n          <div className=\"flex flex-row-reverse items-center justify-between\">\n            <Button\n              className=\"ms-2 h-7 px-2\"\n              onClick={() => {\n                onSubmit?.(\n                  buildTime({\n                    use12HourFormat,\n                    value,\n                    formatStr,\n                    hour,\n                    minute,\n                    second,\n                    ampm,\n                  })\n                );\n              }}\n            >\n              Done\n            </Button>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nconst TimeItem = ({\n  option,\n  selected,\n  onSelect,\n  className,\n  disabled,\n}: {\n  option: SimpleTimeOption;\n  selected: boolean;\n  onSelect: (option: SimpleTimeOption) => void;\n  className?: string;\n  disabled?: boolean;\n}) => {\n  return (\n    <Button\n      variant=\"ghost\"\n      className={cn(\"flex justify-center px-1 pe-2 ps-1\", className)}\n      onClick={() => onSelect(option)}\n      disabled={disabled}\n    >\n      <div className=\"w-4\">\n        {selected && <CheckIcon className=\"my-auto size-4\" />}\n      </div>\n      <span className=\"ms-2\">{option.label}</span>\n    </Button>\n  );\n};\n\ninterface BuildTimeOptions {\n  use12HourFormat?: boolean;\n  value: Date;\n  formatStr: string;\n  hour: number;\n  minute: number;\n  second: number;\n  ampm: number;\n}\n\nfunction buildTime(options: BuildTimeOptions) {\n  const { use12HourFormat, value, formatStr, hour, minute, second, ampm } =\n    options;\n  let date: Date;\n  if (use12HourFormat) {\n    const dateStrRaw = format(value, formatStr);\n    // yyyy-MM-dd hh:mm:ss.SSS a zzzz\n    // 2024-10-14 01:20:07.524 AM GMT+00:00\n    let dateStr =\n      dateStrRaw.slice(0, 11) +\n      hour.toString().padStart(2, \"0\") +\n      dateStrRaw.slice(13);\n    dateStr =\n      dateStr.slice(0, 14) +\n      minute.toString().padStart(2, \"0\") +\n      dateStr.slice(16);\n    dateStr =\n      dateStr.slice(0, 17) +\n      second.toString().padStart(2, \"0\") +\n      dateStr.slice(19);\n    dateStr =\n      dateStr.slice(0, 24) +\n      (ampm == AM_VALUE ? \"AM\" : \"PM\") +\n      dateStr.slice(26);\n    date = parse(dateStr, formatStr, value);\n  } else {\n    date = setHours(\n      setMinutes(setSeconds(setMilliseconds(value, 0), second), minute),\n      hour\n    );\n  }\n  return date;\n}\n","import * as React from 'react';\nimport React__default from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    const isFileListInstance = typeof FileList !== 'undefined' ? data instanceof FileList : false;\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (data instanceof Set) {\n        copy = new Set(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || isFileListInstance)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : {};\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar isUndefined = (val) => val === undefined;\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n            return;\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React__default.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React__default.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React__default.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React__default.useState(control._formState);\n    const _localProxyFormState = React__default.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        validatingFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    useIsomorphicLayoutEffect(() => control._subscribe({\n        name: name,\n        formState: _localProxyFormState.current,\n        exact,\n        callback: (formState) => {\n            !disabled &&\n                updateFormState({\n                    ...control._formState,\n                    ...formState,\n                });\n        },\n    }), [name, disabled, exact]);\n    React__default.useEffect(() => {\n        _localProxyFormState.current.isValid && control._setValid(true);\n    }, [control]);\n    return React__default.useMemo(() => getProxyFormState(formState, control, _localProxyFormState.current, false), [formState, control]);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, } = props || {};\n    const _defaultValue = React__default.useRef(defaultValue);\n    const [value, updateValue] = React__default.useState(control._getWatch(name, _defaultValue.current));\n    useIsomorphicLayoutEffect(() => control._subscribe({\n        name: name,\n        formState: {\n            values: true,\n        },\n        exact,\n        callback: (formState) => !disabled &&\n            updateValue(generateWatchOutput(name, control._names, formState.values || control._formValues, false, _defaultValue.current)),\n    }), [name, control, disabled, exact]);\n    React__default.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n        exact: true,\n    });\n    const _props = React__default.useRef(props);\n    const _registerProps = React__default.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }));\n    const fieldState = React__default.useMemo(() => Object.defineProperties({}, {\n        invalid: {\n            enumerable: true,\n            get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n            enumerable: true,\n            get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n            enumerable: true,\n            get: () => !!get(formState.touchedFields, name),\n        },\n        isValidating: {\n            enumerable: true,\n            get: () => !!get(formState.validatingFields, name),\n        },\n        error: {\n            enumerable: true,\n            get: () => get(formState.errors, name),\n        },\n    }), [formState, name]);\n    const onChange = React__default.useCallback((event) => _registerProps.current.onChange({\n        target: {\n            value: getEventValue(event),\n            name: name,\n        },\n        type: EVENTS.CHANGE,\n    }), [name]);\n    const onBlur = React__default.useCallback(() => _registerProps.current.onBlur({\n        target: {\n            value: get(control._formValues, name),\n            name: name,\n        },\n        type: EVENTS.BLUR,\n    }), [name, control._formValues]);\n    const ref = React__default.useCallback((elm) => {\n        const field = get(control._fields, name);\n        if (field && elm) {\n            field._f.ref = {\n                focus: () => elm.focus(),\n                select: () => elm.select(),\n                setCustomValidity: (message) => elm.setCustomValidity(message),\n                reportValidity: () => elm.reportValidity(),\n            };\n        }\n    }, [control._fields, name]);\n    const field = React__default.useMemo(() => ({\n        name,\n        value,\n        ...(isBoolean(disabled) || formState.disabled\n            ? { disabled: formState.disabled || disabled }\n            : {}),\n        onChange,\n        onBlur,\n        ref,\n    }), [name, disabled, formState.disabled, onChange, onBlur, ref, value]);\n    React__default.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        control.register(name, {\n            ..._props.current.rules,\n            ...(isBoolean(_props.current.disabled)\n                ? { disabled: _props.current.disabled }\n                : {}),\n        });\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field && field._f) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        !isArrayField && control.register(name);\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React__default.useEffect(() => {\n        control._setDisabledField({\n            disabled,\n            name,\n        });\n    }, [disabled, name, control]);\n    return React__default.useMemo(() => ({\n        field,\n        formState,\n        fieldState,\n    }), [field, formState, fieldState]);\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst flatten = (obj) => {\n    const output = {};\n    for (const key of Object.keys(obj)) {\n        if (isObjectType(obj[key]) && obj[key] !== null) {\n            const nested = flatten(obj[key]);\n            for (const nestedKey of Object.keys(nested)) {\n                output[`${key}.${nestedKey}`] = nested[nestedKey];\n            }\n        }\n        else {\n            output[key] = obj[key];\n        }\n    }\n    return output;\n};\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React__default.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            const flattenFormValues = flatten(control._formValues);\n            for (const key in flattenFormValues) {\n                formData.append(key, flattenFormValues[key]);\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(String(action), {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType ? { 'Content-Type': encType } : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React__default.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React__default.createElement(React__default.Fragment, null, render({\n        submit,\n    }))) : (React__default.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\nvar hasPromiseValidation = (fieldReference) => !!fieldReference &&\n    !!fieldReference.validate &&\n    !!((isFunction(fieldReference.validate) &&\n        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n        (isObject(fieldReference.validate) &&\n            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    return true;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    return true;\n                }\n                else {\n                    if (iterateFieldsByAction(currentField, action)) {\n                        break;\n                    }\n                }\n            }\n            else if (isObject(currentField)) {\n                if (iterateFieldsByAction(currentField, action)) {\n                    break;\n                }\n            }\n        }\n    }\n    return;\n};\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isMessage = (value) => isString(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, disabledFieldNames, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabledFieldNames.has(name)) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isReady: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        validatingFields: {},\n        errors: _options.errors || {},\n        disabled: _options.disabled || false,\n    };\n    const _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        disabled: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        validatingFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _proxySubscribeFormState = {\n        ..._proxyFormState,\n    };\n    const _subjects = {\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _setValid = async (shouldUpdateValid) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValid ||\n                _proxySubscribeFormState.isValid ||\n                shouldUpdateValid)) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _runSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (names, isValidating) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValidating ||\n                _proxyFormState.validatingFields ||\n                _proxySubscribeFormState.isValidating ||\n                _proxySubscribeFormState.validatingFields)) {\n            (names || Array.from(_names.mount)).forEach((name) => {\n                if (name) {\n                    isValidating\n                        ? set(_formState.validatingFields, name, isValidating)\n                        : unset(_formState.validatingFields, name);\n                }\n            });\n            _subjects.state.next({\n                validatingFields: _formState.validatingFields,\n                isValidating: !isEmptyObject(_formState.validatingFields),\n            });\n        }\n    };\n    const _setFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method && !_options.disabled) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if ((_proxyFormState.touchedFields ||\n                _proxySubscribeFormState.touchedFields) &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields || _proxySubscribeFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _setValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!_options.disabled) {\n            if (!isBlurEvent || shouldDirty) {\n                if (_proxyFormState.isDirty || _proxySubscribeFormState.isDirty) {\n                    isPreviousDirty = _formState.isDirty;\n                    _formState.isDirty = output.isDirty = _getDirty();\n                    shouldUpdateField = isPreviousDirty !== output.isDirty;\n                }\n                const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n                isPreviousDirty = !!get(_formState.dirtyFields, name);\n                isCurrentFieldPristine\n                    ? unset(_formState.dirtyFields, name)\n                    : set(_formState.dirtyFields, name, true);\n                output.dirtyFields = _formState.dirtyFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        ((_proxyFormState.dirtyFields ||\n                            _proxySubscribeFormState.dirtyFields) &&\n                            isPreviousDirty !== !isCurrentFieldPristine);\n            }\n            if (isBlurEvent) {\n                const isPreviousFieldTouched = get(_formState.touchedFields, name);\n                if (!isPreviousFieldTouched) {\n                    set(_formState.touchedFields, name, isBlurEvent);\n                    output.touchedFields = _formState.touchedFields;\n                    shouldUpdateField =\n                        shouldUpdateField ||\n                            ((_proxyFormState.touchedFields ||\n                                _proxySubscribeFormState.touchedFields) &&\n                                isPreviousFieldTouched !== isBlurEvent);\n                }\n            }\n            shouldUpdateField && shouldRender && _subjects.state.next(output);\n        }\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = (_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (_options.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(_options.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n    };\n    const _runSchema = async (name) => {\n        _updateIsValidating(name, true);\n        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n        _updateIsValidating(name);\n        return result;\n    };\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _runSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name], true);\n                    }\n                    const fieldError = await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name]);\n                    }\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                !isEmptyObject(fieldValue) &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => !_options.disabled &&\n        (name && data && set(_formValues, name, data),\n            !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, _options.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.forEach((checkboxRef) => {\n                            if (!checkboxRef.defaultChecked || !checkboxRef.disabled) {\n                                if (Array.isArray(fieldValue)) {\n                                    checkboxRef.checked = !!fieldValue.find((data) => data === checkboxRef.value);\n                                }\n                                else {\n                                    checkboxRef.checked =\n                                        fieldValue === checkboxRef.value || !!fieldValue;\n                                }\n                            }\n                        });\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.state.next({\n                            name,\n                            values: cloneObject(_formValues),\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            if (!value.hasOwnProperty(fieldKey)) {\n                return;\n            }\n            const fieldValue = value[fieldKey];\n            const fieldName = `${name}.${fieldKey}`;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                isObject(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: cloneObject(_formValues),\n            });\n            if ((_proxyFormState.isDirty ||\n                _proxyFormState.dirtyFields ||\n                _proxySubscribeFormState.isDirty ||\n                _proxySubscribeFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState });\n        _subjects.state.next({\n            name: _state.mount ? name : undefined,\n            values: cloneObject(_formValues),\n        });\n    };\n    const onChange = async (event) => {\n        _state.mount = true;\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n                    deepEqual(fieldValue, get(_formValues, name, fieldValue));\n        };\n        const validationModeBeforeSubmit = getValidationModes(_options.mode);\n        const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = target.type\n                ? getFieldValue(field._f)\n                : getEventValue(event);\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                field._f.onBlur && field._f.onBlur(event);\n                delayErrorCallback && delayErrorCallback(0);\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.state.next({\n                    name,\n                    type: event.type,\n                    values: cloneObject(_formValues),\n                });\n            if (shouldSkipValidation) {\n                if (_proxyFormState.isValid || _proxySubscribeFormState.isValid) {\n                    if (_options.mode === 'onBlur') {\n                        if (isBlurEvent) {\n                            _setValid();\n                        }\n                    }\n                    else if (!isBlurEvent) {\n                        _setValid();\n                    }\n                }\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            if (_options.resolver) {\n                const { errors } = await _runSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                _updateIsValidating([name], true);\n                error = (await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsValidating([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid ||\n                        _proxySubscribeFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _setValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                ((_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n                    isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ...(_state.mount ? _formValues : _defaultValues),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        error: get((formState || _formState).errors, name),\n        isValidating: !!get(_formState.validatingFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        const currentError = get(_formState.errors, name) || {};\n        // Don't override existing error messages elsewhere in the object tree.\n        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n        set(_formState.errors, name, {\n            ...restOfErrorTree,\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.state.subscribe({\n            next: (payload) => name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const _subscribe = (props) => _subjects.state.subscribe({\n        next: (formState) => {\n            if (shouldSubscribeByName(props.name, formState.name, props.exact) &&\n                shouldRenderFormState(formState, props.formState || _proxyFormState, _setFormState, props.reRenderRoot)) {\n                props.callback({\n                    values: { ..._formValues },\n                    ..._formState,\n                    ...formState,\n                });\n            }\n        },\n    }).unsubscribe;\n    const subscribe = (props) => {\n        _state.mount = true;\n        _proxySubscribeFormState = {\n            ..._proxySubscribeFormState,\n            ...props.formState,\n        };\n        return _subscribe({\n            ...props,\n            formState: _proxySubscribeFormState,\n        });\n    };\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !options.keepIsValidating &&\n                unset(_formState.validatingFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.state.next({\n            values: cloneObject(_formValues),\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _setValid();\n    };\n    const _setDisabledField = ({ disabled, name, }) => {\n        if ((isBoolean(disabled) && _state.mount) ||\n            !!disabled ||\n            _names.disabled.has(name)) {\n            disabled ? _names.disabled.add(name) : _names.disabled.delete(name);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(_options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _setDisabledField({\n                disabled: isBoolean(options.disabled)\n                    ? options.disabled\n                    : _options.disabled,\n                name,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined\n                ? { disabled: options.disabled || _options.disabled }\n                : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                const currentField = get(_fields, name);\n                if (currentField) {\n                    ref.disabled = currentField._f.disabled || disabled;\n                    if (Array.isArray(currentField._f.refs)) {\n                        currentField._f.refs.forEach((inputRef) => {\n                            inputRef.disabled = currentField._f.disabled || disabled;\n                        });\n                    }\n                }\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        let onValidError = undefined;\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist &&\n                e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _runSchema();\n            _formState.errors = errors;\n            fieldValues = values;\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        if (_names.disabled.size) {\n            for (const name of _names.disabled) {\n                set(fieldValues, name, undefined);\n            }\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            try {\n                await onValid(fieldValues, e);\n            }\n            catch (error) {\n                onValidError = error;\n            }\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n        if (onValidError) {\n            throw onValidError;\n        }\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, cloneObject(get(_defaultValues, name)));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, cloneObject(options.defaultValue));\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _setValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const isEmptyResetValues = isEmptyObject(formValues);\n        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues) {\n                const fieldsToCheck = new Set([\n                    ..._names.mount,\n                    ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n                ]);\n                for (const fieldName of Array.from(fieldsToCheck)) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                for (const fieldName of _names.mount) {\n                    setValue(fieldName, get(values, fieldName));\n                }\n            }\n            _formValues = cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.state.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            disabled: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        _state.mount =\n            !_proxyFormState.isValid ||\n                !!keepStateOptions.keepIsValid ||\n                !!keepStateOptions.keepDirtyValues;\n        _state.watch = !!_options.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: isEmptyResetValues\n                ? false\n                : keepStateOptions.keepDirty\n                    ? _formState.isDirty\n                    : !!(keepStateOptions.keepDefaultValues &&\n                        !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: isEmptyResetValues\n                ? {}\n                : keepStateOptions.keepDirtyValues\n                    ? keepStateOptions.keepDefaultValues && _formValues\n                        ? getDirtyFields(_defaultValues, _formValues)\n                        : _formState.dirtyFields\n                    : keepStateOptions.keepDefaultValues && formValues\n                        ? getDirtyFields(_defaultValues, formValues)\n                        : keepStateOptions.keepDirty\n                            ? _formState.dirtyFields\n                            : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect &&\n                    isFunction(fieldRef.select) &&\n                    fieldRef.select();\n            }\n        }\n    };\n    const _setFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    const methods = {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _subscribe,\n            _runSchema,\n            _getWatch,\n            _getDirty,\n            _setValid,\n            _setFieldArray,\n            _setDisabledField,\n            _setErrors,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _removeUnmounted,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        subscribe,\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n    return {\n        ...methods,\n        formControl: methods,\n    };\n}\n\nvar generateId = () => {\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, rules, } = props;\n    const [fields, setFields] = React__default.useState(control._getFieldArray(name));\n    const ids = React__default.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React__default.useRef(fields);\n    const _name = React__default.useRef(name);\n    const _actioned = React__default.useRef(false);\n    _name.current = name;\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    rules &&\n        control.register(name, rules);\n    React__default.useEffect(() => control._subjects.array.subscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === _name.current || !fieldArrayName) {\n                const fieldValues = get(values, _name.current);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n    }).unsubscribe, [control]);\n    const updateValues = React__default.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._setFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        !Array.isArray(get(control._fields, name)) &&\n            set(control._fields, name, undefined);\n        control._setFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._setFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._setFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React__default.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted) &&\n            !getValidationModes(control._options.reValidateMode).isOnSubmit) {\n            if (control._options.resolver) {\n                control._runSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field &&\n                    field._f &&\n                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&\n                        getValidationModes(control._options.mode).isOnSubmit)) {\n                    validateField(field, control._names.disabled, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.state.next({\n            name,\n            values: cloneObject(control._formValues),\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._setValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React__default.useEffect(() => {\n        !get(control._formValues, name) && control._setFieldArray(name);\n        return () => {\n            const updateMounted = (name, value) => {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    field._f.mount = value;\n                }\n            };\n            control._options.shouldUnregister || shouldUnregister\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React__default.useCallback(swap, [updateValues, name, control]),\n        move: React__default.useCallback(move, [updateValues, name, control]),\n        prepend: React__default.useCallback(prepend, [updateValues, name, control]),\n        append: React__default.useCallback(append, [updateValues, name, control]),\n        remove: React__default.useCallback(remove, [updateValues, name, control]),\n        insert: React__default.useCallback(insert$1, [updateValues, name, control]),\n        update: React__default.useCallback(update, [updateValues, name, control]),\n        replace: React__default.useCallback(replace, [updateValues, name, control]),\n        fields: React__default.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React__default.useRef(undefined);\n    const _values = React__default.useRef(undefined);\n    const [formState, updateFormState] = React__default.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        validatingFields: {},\n        errors: props.errors || {},\n        disabled: props.disabled || false,\n        isReady: false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        _formControl.current = {\n            ...(props.formControl ? props.formControl : createFormControl(props)),\n            formState,\n        };\n        if (props.formControl &&\n            props.defaultValues &&\n            !isFunction(props.defaultValues)) {\n            props.formControl.reset(props.defaultValues, props.resetOptions);\n        }\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useIsomorphicLayoutEffect(() => {\n        const sub = control._subscribe({\n            formState: control._proxyFormState,\n            callback: () => updateFormState({ ...control._formState }),\n            reRenderRoot: true,\n        });\n        updateFormState((data) => ({\n            ...data,\n            isReady: true,\n        }));\n        control._formState.isReady = true;\n        return sub;\n    }, [control]);\n    React__default.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React__default.useEffect(() => {\n        if (props.mode) {\n            control._options.mode = props.mode;\n        }\n        if (props.reValidateMode) {\n            control._options.reValidateMode = props.reValidateMode;\n        }\n        if (props.errors && !isEmptyObject(props.errors)) {\n            control._setErrors(props.errors);\n        }\n    }, [control, props.errors, props.mode, props.reValidateMode]);\n    React__default.useEffect(() => {\n        props.shouldUnregister &&\n            control._subjects.state.next({\n                values: control._getWatch(),\n            });\n    }, [control, props.shouldUnregister]);\n    React__default.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React__default.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, control._options.resetOptions);\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [control, props.values]);\n    React__default.useEffect(() => {\n        if (!control._state.mount) {\n            control._setValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, createFormControl, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import * as React from \"react\";\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// TooltipProvider props\r\ntype TooltipProviderProps = React.ComponentPropsWithoutRef<\r\n  typeof TooltipPrimitive.Provider\r\n>;\r\n\r\nfunction TooltipProvider({\r\n  delayDuration = 0,\r\n  ...props\r\n}: TooltipProviderProps) {\r\n  return <TooltipPrimitive.Provider delayDuration={delayDuration} {...props} />;\r\n}\r\n\r\n// Tooltip root props\r\ntype TooltipProps = React.ComponentPropsWithoutRef<\r\n  typeof TooltipPrimitive.Root\r\n>;\r\n\r\nfunction Tooltip({ children, ...props }: TooltipProps) {\r\n  return (\r\n    <TooltipProvider>\r\n      <TooltipPrimitive.Root {...props}>{children}</TooltipPrimitive.Root>\r\n    </TooltipProvider>\r\n  );\r\n}\r\n\r\n// Tooltip trigger props\r\ntype TooltipTriggerProps = React.ComponentPropsWithoutRef<\r\n  typeof TooltipPrimitive.Trigger\r\n>;\r\n\r\nfunction TooltipTrigger(props: TooltipTriggerProps) {\r\n  return <TooltipPrimitive.Trigger {...props} />;\r\n}\r\n\r\n// Tooltip content props\r\ntype TooltipContentProps = React.ComponentPropsWithoutRef<\r\n  typeof TooltipPrimitive.Content\r\n> & {\r\n  className?: string;\r\n  sideOffset?: number;\r\n  side?: \"top\" | \"right\" | \"bottom\" | \"left\";\r\n  children?: React.ReactNode;\r\n};\r\n\r\nfunction TooltipContent({\r\n  className,\r\n  sideOffset = 8,\r\n  side = \"bottom\",\r\n  children,\r\n  ...props\r\n}: TooltipContentProps) {\r\n  return (\r\n    <TooltipPrimitive.Portal>\r\n      <TooltipPrimitive.Content\r\n        side={side}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          \"bg-white text-black border border-gray-200 shadow-lg rounded-md \" +\r\n            \"px-3 py-1 text-xs font-normal z-50 w-fit \" +\r\n            \"animate-in fade-in-0 zoom-in-95 \" +\r\n            \"data-[state=closed]:animate-out data-[state=closed]:fade-out-0 \" +\r\n            \"data-[state=closed]:zoom-out-95 \" +\r\n            \"data-[side=bottom]:slide-in-from-top-2 \" +\r\n            \"data-[side=top]:slide-in-from-bottom-2 \" +\r\n            \"data-[side=left]:slide-in-from-right-2 \" +\r\n            \"data-[side=right]:slide-in-from-left-2\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        <TooltipPrimitive.Arrow className=\"fill-white stroke-gray-200 drop-shadow-md\" />\r\n      </TooltipPrimitive.Content>\r\n    </TooltipPrimitive.Portal>\r\n  );\r\n}\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };\r\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { format, parse, isValid, getYear } from \"date-fns\";\nimport {\n  useRef,\n  useState,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useCallback,\n} from \"react\";\nimport { CalendarIcon, CircleAlert, CircleCheck } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useFormContext } from \"react-hook-form\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { TZDate } from \"react-day-picker\";\n\ntype DateTimeInputProps = {\n  className?: string;\n  value?: Date;\n  onChange?: (date?: Date) => void;\n  onKeyDown?: (event: React.KeyboardEvent<Element>) => void;\n  onBlur?: (event: React.FocusEvent<Element>) => void;\n  format?: string;\n  disabled?: boolean;\n  clearable?: boolean;\n  timezone?: string;\n  hideCalendarIcon?: boolean;\n  onCalendarClick?: () => void;\n};\n\n// https://date-fns.org/v4.1.0/docs/format\ntype SegmentType =\n  | \"year\"\n  | \"month\"\n  | \"date\"\n  | \"hour\"\n  | \"minute\"\n  | \"second\"\n  | \"period\"\n  | \"space\";\n\nconst segmentConfigs = [\n  {\n    type: \"year\" as SegmentType,\n    symbols: [\"y\"],\n  },\n  {\n    type: \"month\" as SegmentType,\n    symbols: [\"M\"],\n  },\n  {\n    type: \"date\" as SegmentType,\n    symbols: [\"d\"],\n  },\n  {\n    type: \"hour\" as SegmentType,\n    symbols: [\"h\", \"H\"],\n  },\n  {\n    type: \"minute\" as SegmentType,\n    symbols: [\"m\"],\n  },\n  {\n    type: \"second\" as SegmentType,\n    symbols: [\"s\"],\n  },\n  {\n    type: \"period\" as SegmentType,\n    symbols: [\"a\"],\n  },\n  {\n    type: \"space\" as SegmentType,\n    symbols: [\" \", \"/\", \"-\", \":\", \",\", \".\"],\n  },\n];\n\nconst mergeRefs = (...refs: any) => {\n  return (node: any) => {\n    for (const ref of refs) {\n      if (ref) ref.current = node;\n    }\n  };\n};\nconst DateTimeInput = React.forwardRef<HTMLInputElement, DateTimeInputProps>(\n  (options: DateTimeInputProps, ref) => {\n    const {\n      format: formatProp,\n      value: _value,\n      timezone,\n      onKeyDown: onKeyDownCustom,\n      ...rest\n    } = options;\n    const value = useMemo(\n      () => (_value ? new TZDate(_value, timezone) : undefined),\n      [_value, timezone]\n    );\n    const form = useFormContext();\n    const formatStr = React.useMemo(\n      () => formatProp || \"dd/MM/yyyy-hh:mm aa\",\n      [formatProp]\n    );\n    const inputRef = useRef<HTMLInputElement>(undefined);\n\n    const [segments, setSegments] = useState<Segment[]>([]);\n    const [selectedSegmentAt, setSelectedSegmentAt] = useState<\n      number | undefined\n    >(undefined);\n\n    useEffect(() => {\n      if (form?.formState.isSubmitted) {\n        setSegments(parseFormat(formatStr, value));\n      }\n    }, [form?.formState.isSubmitted]);\n    useEffect(() => {\n      // console.error('valueChanged', {formatStr, inputStr, value});\n      setSegments(parseFormat(formatStr, value));\n    }, [formatStr, value]);\n\n    const curSegment = useMemo(() => {\n      if (\n        selectedSegmentAt === undefined ||\n        selectedSegmentAt < 0 ||\n        selectedSegmentAt >= segments.length\n      )\n        return undefined;\n      return segments[selectedSegmentAt];\n    }, [segments, selectedSegmentAt]);\n    const setCurrentSegment = useCallback(\n      (segment: Segment | undefined) => {\n        const at = segments?.findIndex((s) => s.index === segment?.index);\n        at !== -1 && setSelectedSegmentAt(at);\n      },\n      [segments, setSelectedSegmentAt]\n    );\n\n    const validSegments = useMemo(\n      () => segments.filter((s) => s.type !== \"space\"),\n      [segments]\n    );\n    const inputStr = useMemo(() => {\n      return segments\n        .map((s) =>\n          s.value ? s.value.padStart(s.symbols.length, \"0\") : s.symbols\n        )\n        .join(\"\");\n    }, [segments]);\n    const areAllSegmentsEmpty = useMemo(\n      () => validSegments.every((s) => !s.value),\n      [validSegments]\n    );\n\n    const inputValue = useMemo(() => {\n      const allHasValue = !validSegments.some((s) => !s.value);\n      if (!allHasValue) return;\n      const date = parse(\n        inputStr,\n        formatStr,\n        value || new TZDate(new Date(), timezone)\n      );\n      const year = getYear(date);\n      // console.log('inputValue', {allHasValue, validSegments, inputStr, formatStr, date, year});\n      if (isValid(date) && year > 1900 && year < 2100) {\n        return date;\n      }\n    }, [validSegments, inputStr, formatStr]);\n    useEffect(() => {\n      if (!inputValue) return;\n      if (value?.getTime() !== inputValue.getTime()) {\n        // console.log('inputValueChanged', {formatStr, inputStr, value, inputValue, });\n        options.onChange?.(inputValue);\n      }\n    }, [inputValue]);\n\n    const onClick = useEventCallback(\n      (event: React.MouseEvent<HTMLInputElement>) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const selectionStart = inputRef.current?.selectionStart;\n        if (\n          inputRef.current &&\n          selectionStart !== undefined &&\n          selectionStart !== null\n        ) {\n          const validSegments = segments.filter((s) => s.type !== \"space\");\n          let segment = validSegments.find(\n            (s) =>\n              s.index <= selectionStart &&\n              s.index + s.symbols.length >= selectionStart\n          );\n          !segment &&\n            (segment = [...validSegments]\n              .reverse()\n              .find((s) => s.index <= selectionStart));\n          !segment &&\n            (segment = validSegments.find((s) => s.index >= selectionStart));\n          setCurrentSegment(segment);\n          setSelection(inputRef, segment);\n        }\n      },\n      [segments]\n    );\n\n    const onSegmentChange = useEventCallback(\n      (direction: \"left\" | \"right\") => {\n        if (!curSegment) return;\n        const validSegments = segments.filter((s) => s.type !== \"space\");\n        const segment =\n          direction === \"left\"\n            ? [...validSegments]\n                .reverse()\n                .find((s) => s.index < curSegment.index)\n            : validSegments.find((s) => s.index > curSegment.index);\n        if (segment) {\n          setCurrentSegment(segment);\n          setSelection(inputRef, segment);\n        }\n      },\n      [segments, curSegment]\n    );\n\n    const onSegmentNumberValueChange = useEventCallback(\n      (num: string) => {\n        if (!curSegment) return;\n        let segment = curSegment;\n        let shouldNext = false;\n        if (segment.type !== \"period\") {\n          const length = segment.symbols.length;\n          const rawValue = parseInt(segment.value).toString();\n          let newValue = rawValue.length < length ? rawValue + num : num;\n          let parsedDate = parse(\n            newValue.padStart(length, \"0\"),\n            segment.symbols,\n            safeDate(timezone)\n          );\n          if (!isValid(parsedDate) && newValue.length > 1) {\n            newValue = num;\n            parsedDate = parse(newValue, segment.symbols, safeDate(timezone));\n          }\n          const updatedSegments = segments.map((s) =>\n            s.index === segment.index ? { ...segment, value: newValue } : s\n          );\n          setSegments(updatedSegments);\n          segment = updatedSegments.find((s) => s.index === segment.index)!;\n          shouldNext = newValue.length === length;\n          if (!shouldNext) {\n            switch (segment.type) {\n              case \"month\":\n                shouldNext = +newValue > 1;\n                break;\n              case \"date\":\n                shouldNext = +newValue > 3;\n                break;\n              case \"hour\":\n                shouldNext =\n                  +newValue > (segment.symbols.includes(\"H\") ? 2 : 1);\n                break;\n              case \"minute\":\n              case \"second\":\n                shouldNext = +newValue > 5;\n                break;\n              default:\n                break;\n            }\n          }\n        }\n        shouldNext ? onSegmentChange(\"right\") : setSelection(inputRef, segment);\n      },\n      [segments, curSegment]\n    );\n\n    const onSegmentPeriodValueChange = useEventCallback(\n      (key: string) => {\n        if (curSegment?.type !== \"period\") return;\n        let segment = curSegment;\n        let ok = false;\n        let newValue = \"\";\n        if (key?.toLowerCase() === \"a\") {\n          newValue = \"AM\";\n          ok = true;\n        } else if (key?.toLowerCase() === \"p\") {\n          newValue = \"PM\";\n          ok = true;\n        }\n        if (ok) {\n          const updatedSegments = segments.map((s) =>\n            s.index === segment.index ? { ...segment, value: newValue } : s\n          );\n          setSegments(updatedSegments);\n          segment = updatedSegments.find((s) => s.index === segment.index)!;\n        }\n        setSelection(inputRef, segment);\n      },\n      [segments, curSegment]\n    );\n\n    const onSegmentValueRemove = useEventCallback(() => {\n      if (!curSegment) return;\n      if (curSegment.value) {\n        const updatedSegments = segments.map((s) =>\n          s.index === curSegment.index ? { ...curSegment, value: \"\" } : s\n        );\n        setSegments(updatedSegments);\n        const segment = updatedSegments.find(\n          (s) => s.index === curSegment.index\n        )!;\n        setSelection(inputRef, segment);\n      } else {\n        onSegmentChange(\"left\");\n      }\n    }, [segments, curSegment]);\n\n    const onKeyDown = useEventCallback(\n      (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const key = event.key;\n        setSelection(inputRef, curSegment);\n        if (inputValue) {\n          onKeyDownCustom?.(event);\n        }\n        switch (key) {\n          case \"ArrowRight\":\n          case \"ArrowLeft\":\n            onSegmentChange(key === \"ArrowRight\" ? \"right\" : \"left\");\n            event.preventDefault();\n            break;\n          // case 'ArrowUp':\n          // case 'ArrowDown':\n          //   // onSegmentValueChange?.(event);\n          //   event.preventDefault();\n          //   break;\n          case \"Backspace\":\n            onSegmentValueRemove();\n            event.preventDefault();\n            break;\n\n          case key.match(/\\d/)?.input:\n            onSegmentNumberValueChange(key);\n            event.preventDefault();\n            break;\n          case key.match(/[a-z]/)?.[0]:\n            onSegmentPeriodValueChange(key);\n            event.preventDefault();\n            break;\n        }\n      },\n      [inputValue]\n    );\n\n    const [isFocused, setIsFocused] = useState(false);\n    const onBlur = useEventCallback(\n      (event: React.FocusEvent<Element>) => {\n        setIsFocused(false);\n        if (inputValue) options.onBlur?.(event);\n      },\n      [inputValue]\n    );\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex h-10 items-center justify-start rounded-md border border-input bg-background text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground  disabled:cursor-not-allowed disabled:opacity-50\",\n          isFocused ? \"outline-none ring-2 ring-ring ring-offset-2\" : \"\",\n          options.hideCalendarIcon && \"ps-2\",\n          options.className\n        )}\n      >\n        {!options.hideCalendarIcon && (\n          <Button variant=\"ghost\" size=\"icon\" onClick={options.onCalendarClick}>\n            <CalendarIcon className=\"size-4 text-muted-foreground\" />\n          </Button>\n        )}\n        <input\n          ref={mergeRefs(inputRef)}\n          className=\"font-mono flex-grow min-w-0 bg-transparent py-1 pe-2 text-sm focus:outline-none disabled:cursor-not-allowed disabled:opacity-50\"\n          onFocus={() => setIsFocused(true)}\n          onBlur={onBlur}\n          onClick={onClick}\n          onKeyDown={onKeyDown}\n          value={inputStr}\n          placeholder={formatStr}\n          onChange={() => {}}\n          disabled={options.disabled}\n          spellCheck={false}\n        />\n        <div className=\"me-3\">\n          {inputValue ? (\n            <CircleCheck className=\"size-4 text-green-500\" />\n          ) : (\n            <TooltipProvider>\n              <Tooltip>\n                <TooltipTrigger className=\"flex items-center justify-center\">\n                  <CircleAlert\n                    className={cn(\n                      \"size-4\",\n                      !areAllSegmentsEmpty && \"text-red-500\"\n                    )}\n                  />\n                </TooltipTrigger>\n                <TooltipContent className=\"w-[160px]\">\n                  <p>\n                    Please enter a valid value. The input cannot be empty and\n                    must be within the range of years 1900 to 2100.\n                  </p>\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nDateTimeInput.displayName = \"DateTimeInput\";\n\nexport { DateTimeInput };\n\ninterface Segment {\n  type: SegmentType;\n  symbols: string;\n  index: number;\n  value: string;\n}\nfunction parseFormat(formatStr: string, value?: Date) {\n  const views: Segment[] = [];\n  let lastPattern: any = \"\";\n  let symbols = \"\";\n  let patternIndex = 0;\n  let index = 0;\n  for (const c of formatStr) {\n    const pattern = segmentConfigs.find((p) => p.symbols.includes(c))!;\n    if (!pattern) continue;\n    if (pattern.type !== lastPattern) {\n      symbols &&\n        views.push({\n          type: lastPattern,\n          symbols,\n          index: patternIndex,\n          value: value ? format(value, symbols) : \"\",\n        });\n      lastPattern = pattern?.type || \"\";\n      symbols = c;\n      patternIndex = index;\n    } else {\n      symbols += c;\n    }\n    index++;\n  }\n  symbols &&\n    views.push({\n      type: lastPattern,\n      symbols,\n      index: patternIndex,\n      value: value ? format(value, symbols) : \"\",\n    });\n  return views;\n}\n\nconst safeDate = (timezone?: string) => {\n  return new TZDate(\"2000-01-01T00:00:00\", timezone);\n};\n\nconst isAndroid = () => /Android/i.test(navigator.userAgent);\n\nfunction setSelection(\n  ref: React.MutableRefObject<HTMLInputElement | undefined>,\n  segment?: Segment\n) {\n  if (!ref.current || !segment) return;\n  safeSetSelection(\n    ref.current,\n    segment.index,\n    segment.index + segment.symbols.length\n  );\n}\n\nfunction safeSetSelection(\n  element: HTMLInputElement,\n  selectionStart: number,\n  selectionEnd: number\n) {\n  requestAnimationFrame(() => {\n    if (document.activeElement === element) {\n      if (isAndroid()) {\n        requestAnimationFrame(() => {\n          element.setSelectionRange(selectionStart, selectionEnd, \"none\");\n        });\n      } else {\n        element.setSelectionRange(selectionStart, selectionEnd, \"none\");\n      }\n    }\n  });\n}\nexport function useEventCallback<T extends Function>(fn: T, deps: any[]) {\n  const ref = useRef(fn);\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return useCallback((...args: any[]) => {\n    return ref.current?.(...args);\n  }, deps);\n}\n\nexport const useIsomorphicLayoutEffect =\n  typeof document !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { Input } from \"@/components/ui/input\";\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nimport React, { useRef, useEffect } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { DateTimePicker } from \"@/components/datetime-picker\";\nimport { SimpleTimePicker } from \"@/components/simple-time-picker\";\nimport { DateTimeInput } from \"../datetime-input\";\nimport moment from \"moment\";\n\n// Define proper types for editor components\ninterface EditorProps<T = string | boolean | Date | number> {\n  value: T | null;\n  onChange: (value: T | null) => void;\n  onBlur?: () => void;\n  onKeyDown?: (e: React.KeyboardEvent<Element>) => void;\n  placeholder?: string;\n  hideTime?: boolean;\n  [key: string]: unknown;\n}\n\ninterface SelectOption {\n  value: string;\n  label: string;\n}\ninterface SelectEditorProps extends EditorProps<string> {\n  options: SelectOption[];\n}\n\ninterface DateEditorProps extends EditorProps<Date> {\n  valueFormatter?: (value: string | boolean | Date | number | null) => string;\n}\n\ninterface TimeEditorProps extends EditorProps<string> {\n  valueFormatter?: (value: string | null) => string;\n}\n\ninterface NumberEditorProps extends EditorProps<number> {\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\ntype TextEditorProps = EditorProps<string>;\n\n// Editor Components\nconst TextEditor = ({\n  value,\n  onChange,\n  onKeyDown,\n  placeholder,\n  onBlur,\n}: TextEditorProps) => {\n  return (\n    <Input\n      value={value as string}\n      autoFocus={true}\n      onChange={(e) => onChange(e.target.value as string | null)}\n      onBlur={onBlur}\n      onKeyDown={onKeyDown}\n      placeholder={placeholder as string}\n      className=\"h-8 py-1 px-2 text-sm\"\n    />\n  );\n};\n\nconst NumberEditor = ({\n  value,\n  onChange,\n  onBlur,\n  onKeyDown,\n  min,\n  max,\n  step,\n  placeholder,\n}: NumberEditorProps) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (\n      [46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n      (e.keyCode >= 65 && e.keyCode <= 90 && e.ctrlKey === true) ||\n      (e.keyCode >= 35 && e.keyCode <= 39) ||\n      (e.keyCode >= 48 && e.keyCode <= 57) ||\n      (e.keyCode >= 96 && e.keyCode <= 105)\n    ) {\n      return;\n    }\n    e.preventDefault();\n  };\n\n  return (\n    <Input\n      ref={inputRef}\n      type=\"number\"\n      inputMode=\"decimal\"\n      value={value !== null ? String(value) : \"\"}\n      onChange={(e) => {\n        const val = e.target.value;\n        if (val === \"\" || /^\\d*\\.?\\d*$/.test(val)) {\n          const numVal = val === \"\" ? null : Number(val);\n          onChange(numVal as number | null);\n        }\n      }}\n      onBlur={onBlur}\n      onKeyDown={(e) => {\n        handleKeyDown(e);\n        if (onKeyDown) onKeyDown(e);\n      }}\n      min={min as number}\n      max={max as number}\n      step={step as number}\n      placeholder={placeholder as string}\n      className=\"h-8 py-1 px-2 text-sm\"\n    />\n  );\n};\n\nconst SelectEditor = ({ value, onChange, options = [] }: SelectEditorProps) => {\n  return (\n    <div className=\"w-full\">\n      <Select\n        value={value as string}\n        onValueChange={onChange}\n        defaultOpen={true}\n      >\n        <SelectTrigger className=\"w-[160px]\">\n          <SelectValue placeholder=\"Select option\" />\n        </SelectTrigger>\n        <SelectContent className=\"w-[160px]\">\n          <SelectGroup className=\"p-1\">\n            {options.length > 0 ? (\n              options.map((opt: SelectOption) => (\n                <SelectItem\n                  key={opt.value}\n                  value={opt.value}\n                  className={cn(\n                    \"h-8 py-1 px-2 text-sm cursor-pointer\",\n                    \"focus:bg-accent focus:text-accent-foreground\"\n                  )}\n                >\n                  {opt.label}\n                </SelectItem>\n              ))\n            ) : (\n              <div className=\"p-2 text-sm text-muted-foreground text-center\">\n                No options found\n              </div>\n            )}\n          </SelectGroup>\n        </SelectContent>\n      </Select>\n    </div>\n  );\n};\n\nconst DateEditor = ({ value, onChange, hideTime = true }: DateEditorProps) => {\n  const [date, setDate] = React.useState<Date>(\n    value ? new Date(value as unknown as string) : new Date()\n  );\n\n  const handleDateSelect = (selectedDate: Date | undefined) => {\n    if (selectedDate) {\n      setDate(selectedDate);\n      onChange(selectedDate);\n    }\n  };\n\n  const handleDayKeyDown = (\n    value: Date,\n    event: React.KeyboardEvent<Element>\n  ) => {\n    if (event.key === \"Enter\" || event.key === \"Escape\") {\n      setDate(value);\n      onChange(value);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <DateTimePicker\n        value={date}\n        onChange={handleDateSelect}\n        hideTime={hideTime}\n        onDayKeyDown={(value, _params, event) => {\n          handleDayKeyDown(value, event);\n        }}\n        timePicker={{ hour: true, minute: true, second: false }}\n        renderTrigger={({ open, value, setOpen }) => (\n          <DateTimeInput\n            value={value}\n            clearable\n            hideCalendarIcon={false}\n            onChange={(val: Date | undefined) => {\n              if (val) setDate(val);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" || e.key === \"Escape\") {\n                onChange(date);\n              }\n            }}\n            onBlur={() => {\n              onChange(date);\n            }}\n            format={hideTime ? \"MM-dd-yyyy\" : \"MM-dd-yyyy HH:mm\"}\n            disabled={open}\n            onCalendarClick={() => setOpen(!open)}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nconst TimeEditor = ({ value, onChange }: TimeEditorProps) => {\n  const timeNow = new Date(value as string);\n  console.log(timeNow);\n  // Helper to convert \"HH:mm\" string to Date object (today's date)\n  // const parseTimeStringToDate = (timeStr: string | null): Date => {\n  //   if (!timeStr) return new Date();\n  //   const [hours, minutes] = timeStr.split(\":\").map(Number);\n  //   const date = new Date();\n  //   if (!isNaN(hours) && !isNaN(minutes)) {\n  //     date.setHours(hours, minutes, 0, 0);\n  //     return date;\n  //   }\n  //   return new Date();\n  // };\n\n  // // Helper to convert Date object to \"HH:mm\" string\n  // const formatDateToTimeString = (date: Date): string => {\n  //   const hours = date.getHours().toString().padStart(2, \"0\");\n  //   const minutes = date.getMinutes().toString().padStart(2, \"0\");\n  //   return `${hours}:${minutes}`;\n  // };\n\n  // // Always keep a Date object for the picker\n  // const [timeValue, setTimeValue] = React.useState<Date>(\n  //   typeof value === \"string\" ? parseTimeStringToDate(value) : new Date()\n  // );\n\n  const handleTimeChange = (date: Date) => {\n    console.log(date);\n  };\n\n  return (\n    <SimpleTimePicker\n      use12HourFormat={true}\n      value={timeNow}\n      onChange={handleTimeChange}\n      onSubmit={(value) => {\n        onChange(moment(value).format());\n      }}\n    />\n  );\n};\n\n// CellEditor Wrapper\ninterface CellEditorProps {\n  columnDef: {\n    editorType: EditorType;\n    editorParams?: EditorParamsType;\n  };\n  value: string | boolean | Date | number | null;\n  onChange: (value: string | boolean | Date | number | null) => void;\n  onBlur?: () => void;\n  onKeyDown?: (e: React.KeyboardEvent<Element>) => void;\n  valueFormatter?: (params: {\n    value: unknown;\n    data: Record<string, unknown>;\n    node?: unknown;\n  }) => string;\n}\n\ninterface EditorParamsType {\n  placeholder?: string;\n  label?: string;\n  options?: SelectOption[];\n  min?: number;\n  max?: number;\n  step?: number;\n}\n\ntype EditorType = \"text\" | \"number\" | \"select\" | \"date\" | \"time\" | \"dateTime\";\n\ntype EditorValueType = {\n  text: string;\n  number: number;\n  select: string;\n  date: Date;\n  time: string;\n  dateTime: Date;\n};\n\ntype EditorPropsMap = {\n  [K in EditorType]: {\n    value: EditorValueType[K] | null;\n    onChange: (value: EditorValueType[K] | null) => void;\n    onBlur?: () => void;\n    onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n    placeholder?: string;\n    label?: string;\n    options?: SelectOption[];\n    min?: number;\n    max?: number;\n    step?: number;\n    hideTime?: boolean;\n    valueFormatter?: (value: string | boolean | Date | number | null) => string;\n  };\n};\n\ntype TypedEditorProps = EditorPropsMap[EditorType];\n\nconst CellEditor = ({\n  columnDef,\n  value,\n  onChange,\n  onBlur,\n  onKeyDown,\n  valueFormatter,\n}: CellEditorProps) => {\n  const { editorType, editorParams = {} } = columnDef;\n  const typedParams = editorParams as EditorParamsType;\n\n  const editors: Record<EditorType, React.ComponentType<TypedEditorProps>> = {\n    text: TextEditor as React.ComponentType<TypedEditorProps>,\n    number: NumberEditor as React.ComponentType<TypedEditorProps>,\n    select: SelectEditor as React.ComponentType<TypedEditorProps>,\n    date: DateEditor as React.ComponentType<TypedEditorProps>,\n    time: TimeEditor as React.ComponentType<TypedEditorProps>,\n    dateTime: DateEditor as React.ComponentType<TypedEditorProps>,\n  };\n\n  const Editor = editors[editorType as EditorType];\n\n  const editorProps = {\n    value,\n    onChange,\n    onKeyDown,\n    placeholder: typedParams.placeholder,\n    label: typedParams.label,\n    options: typedParams.options,\n    min: typedParams.min,\n    max: typedParams.max,\n    step: typedParams.step,\n    valueFormatter: valueFormatter,\n    onBlur: onBlur,\n  } as TypedEditorProps;\n  const additionalProps = editorType === \"dateTime\" ? { hideTime: false } : {};\n\n  return Editor ? (\n    <div className=\"w-full h-full flex items-center justify-center\">\n      <Editor {...editorProps} {...additionalProps} />\n    </div>\n  ) : (\n    <>{String(value || \"\")}</>\n  );\n};\n\nexport default CellEditor;\n","import * as React from \"react\";\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface SwitchProps\n  extends React.ComponentPropsWithoutRef<typeof SwitchPrimitive.Root> {}\n\nconst Switch: React.FC<SwitchProps> = ({ className, ...props }) => {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  );\n};\n\nexport { Switch };\n","import { ColumnDef, ColumnDefProps } from \"@/types/grid\";\nimport { useCallback } from \"react\";\n\ntype CookedRow = Record<string, unknown>;\n\n// --- MAIN HOOK ---\nexport function useCookedData(columnDefs: ColumnDefProps) {\n  const getCookedSingleRow = useCallback(\n    (\n      row: Record<string, unknown>,\n      columns: ColumnDef[],\n      parentData?: Record<string, unknown>\n    ) => {\n      let updatedRow = { row };\n      columns.map((col) => {\n        if (col.valueGetter) {\n          const computedValue = col.valueGetter({\n            data: row,\n            parentData,\n          });\n          updatedRow = { ...updatedRow, [col.field]: computedValue };\n        } else {\n          updatedRow = { ...updatedRow, [col.field]: row[col.field] };\n        }\n        return col.field;\n      });\n\n      return updatedRow;\n    },\n    []\n  );\n\n  const processChildRow = useCallback(\n    (\n      childRow: Record<string, unknown>,\n      parentRow: Record<string, unknown>\n    ): CookedRow => {\n      const cookedChild: CookedRow = { ...childRow };\n\n      columnDefs.detailGridOptions?.columns?.forEach((col) => {\n        if (typeof col.valueGetter === \"function\") {\n          const cookedRow = getCookedSingleRow(\n            childRow,\n            columnDefs.detailGridOptions?.columns || [],\n            parentRow\n          );\n          cookedChild[col.field] = col.valueGetter({\n            data: childRow,\n            cookedRow: cookedRow,\n            parentData: parentRow,\n          });\n        } else {\n          cookedChild[col.field] = childRow[col.field];\n        }\n      });\n\n      return cookedChild;\n    },\n    [columnDefs.detailGridOptions]\n  );\n\n  const getCookedRow = useCallback(\n    (row: Record<string, unknown>): CookedRow => {\n      const cookedRow: CookedRow = { ...row };\n\n      // 1. Process children first (bottom-up)\n      if (\n        Array.isArray(row.children) &&\n        columnDefs.detailGridOptions?.columns\n      ) {\n        cookedRow.children = row.children.map((childRow) =>\n          processChildRow(childRow, row)\n        );\n      }\n      // 2. Then process parent row using current cookedRow\n      columnDefs.columns?.forEach((col) => {\n        if (typeof col.valueGetter === \"function\") {\n          cookedRow[col.field] = col.valueGetter({\n            data: row,\n            cookedRow: { ...row, ...cookedRow },\n          });\n        } else {\n          cookedRow[col.field] = row[col.field];\n        }\n      });\n      return cookedRow;\n    },\n    [columnDefs.columns, columnDefs.detailGridOptions, processChildRow]\n  );\n\n  const getCookedData = useCallback(\n    (data: Record<string, unknown>[]): CookedRow[] => {\n      return data.map((row) => getCookedRow(row));\n    },\n    [getCookedRow]\n  );\n\n  return { getCookedData };\n}\n","import { DateTimePicker } from \"@/components/datetime-picker\";\nimport { SimpleTimePicker } from \"@/components/simple-time-picker\";\nimport { DateTimeInput } from \"@/components/datetime-input\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search, X } from \"lucide-react\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n} from \"@/components/ui/select\";\nimport { ColumnDef } from \"@/types/grid\";\nimport React, { useEffect } from \"react\";\n\n// Export utility functions\nexport const IsDateType = (type?: string) => type === \"date\";\nexport const IsTimeType = (type?: string) => type === \"time\";\nexport const IsDateTimeType = (type?: string) =>\n  type === \"datetime\" || type === \"dateTime\";\n\nexport const GetDefaultFilterType = (col: ColumnDef) => {\n  if (col.type === \"number\") return \"equals\";\n  if (col.type === \"date\") return \"equals\";\n  if (col.type === \"time\") return \"equals\";\n  if (col.type === \"dateTime\") return \"equals\";\n  return \"contains\";\n};\n\nexport const GetAvailableFilterTypes = (col: ColumnDef) => {\n  if (col.type === \"number\") {\n    return [\n      { value: \"equals\", label: \"Equals\" },\n      { value: \"greaterThan\", label: \"Greater Than\" },\n      { value: \"lessThan\", label: \"Less Than\" },\n    ];\n  }\n  if (IsDateType(col.type)) {\n    return [\n      { value: \"equals\", label: \"Equals\" },\n      { value: \"before\", label: \"Before\" },\n      { value: \"after\", label: \"After\" },\n    ];\n  }\n  if (IsTimeType(col.type)) {\n    return [\n      { value: \"equals\", label: \"Equals\" },\n      { value: \"before\", label: \"Before\" },\n      { value: \"after\", label: \"After\" },\n    ];\n  }\n  if (IsDateTimeType(col.type)) {\n    return [\n      { value: \"equals\", label: \"Equals\" },\n      { value: \"before\", label: \"Before\" },\n      { value: \"after\", label: \"After\" },\n    ];\n  }\n  return [\n    { value: \"contains\", label: \"Contains\" },\n    { value: \"equals\", label: \"Equals\" },\n    { value: \"startsWith\", label: \"Starts with\" },\n    { value: \"endsWith\", label: \"Ends with\" },\n  ];\n};\n\ninterface CellFilterProps {\n  column: ColumnDef;\n  value: string;\n  filterType: string;\n  onFilterChange: (value: string) => void;\n  onFilterTypeChange: (type: string) => void;\n  onClear: () => void;\n}\n\nexport const CellFilter = ({\n  column,\n  value,\n  filterType,\n  onFilterChange,\n  onFilterTypeChange,\n  onClear,\n}: CellFilterProps) => {\n  const availableFilterTypes = GetAvailableFilterTypes(column);\n  const defaultFilterType = GetDefaultFilterType(column);\n\n  // Initialize filter type if not set\n  useEffect(() => {\n    if (!filterType) {\n      onFilterTypeChange(defaultFilterType);\n    }\n  }, [filterType, defaultFilterType, onFilterTypeChange]);\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n        <span className=\"text-sm font-medium text-gray-700\">\n          Filter: {column.headerName}\n        </span>\n        {value && (\n          <button\n            onClick={onClear}\n            className=\"hover:text-gray-900 p-1 hover:bg-gray-100 rounded\"\n          >\n            <X className=\"h-3 w-3\" />\n          </button>\n        )}\n      </div>\n      <Select\n        value={filterType || defaultFilterType}\n        onValueChange={onFilterTypeChange}\n      >\n        <SelectTrigger className=\"w-full text-sm\">\n          {\n            availableFilterTypes.find(\n              (type) => type.value === (filterType || defaultFilterType)\n            )?.label\n          }\n        </SelectTrigger>\n        <SelectContent className=\"w-full max-h-[200px]\">\n          {availableFilterTypes.map((type) => (\n            <SelectItem\n              key={type.value}\n              value={type.value}\n              className=\"h-8 py-1 px-2 text-sm cursor-pointer\"\n            >\n              {type.label}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n\n      <label className=\"text-xs font-medium text-gray-500\">\n        {IsDateType(column.type)\n          ? \"Date\"\n          : IsTimeType(column.type)\n            ? \"Time\"\n            : IsDateTimeType(column.type)\n              ? \"DateTime\"\n              : \"Search\"}\n      </label>\n\n      {IsDateType(column.type) ? (\n        <DateTimePicker\n          value={value ? new Date(value) : undefined}\n          onChange={(val) => {\n            onFilterChange(val ? val.toISOString() : \"\");\n          }}\n          hideTime={true}\n          renderTrigger={({ open, value, setOpen }) => (\n            <DateTimeInput\n              value={value}\n              onChange={(val) => {\n                onFilterChange(val ? val.toISOString() : \"\");\n              }}\n              format=\"MM-dd-yyyy\"\n              disabled={open}\n              onCalendarClick={() => setOpen(!open)}\n            />\n          )}\n        />\n      ) : IsTimeType(column.type) ? (\n        <SimpleTimePicker\n          value={value ? new Date(value) : new Date()}\n          onChange={(val) => {\n            onFilterChange(val ? val.toISOString() : \"\");\n          }}\n          use12HourFormat={true}\n        />\n      ) : IsDateTimeType(column.type) ? (\n        <DateTimePicker\n          value={value ? new Date(value) : undefined}\n          onChange={(val) => {\n            onFilterChange(val ? val.toISOString() : \"\");\n          }}\n          timePicker={{ hour: true, minute: true, second: false }}\n          renderTrigger={({ open, value, setOpen }) => (\n            <DateTimeInput\n              value={value}\n              onChange={(val) => {\n                onFilterChange(val ? val.toISOString() : \"\");\n              }}\n              format=\"MM-dd-yyyy hh:mm\"\n              disabled={open}\n              onCalendarClick={() => setOpen(!open)}\n            />\n          )}\n        />\n      ) : (\n        <div className=\"relative w-full\">\n          <Input\n            placeholder={`Filter ${column.headerName}`}\n            value={value || \"\"}\n            onChange={(e: { target: { value: string } }) =>\n              onFilterChange(e.target.value)\n            }\n            type=\"text\"\n            className=\"h-9 text-sm w-full pl-9 pr-3\"\n            style={{\n              height: \"2.25rem\",\n              fontSize: \"0.875rem\",\n              width: \"100%\",\n              paddingLeft: \"1.5rem\",\n              paddingRight: \"0.75rem\",\n            }}\n          />\n          <div\n            style={{\n              left: 5,\n              position: \"absolute\",\n              top: 0,\n              bottom: 0,\n              display: \"flex\",\n              alignItems: \"center\",\n              pointerEvents: \"none\",\n            }}\n          >\n            <Search className=\"h-4 w-4 text-gray-400\" />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { GripVertical, X } from \"lucide-react\";\nimport type { ColumnDef } from \"@/types/grid\";\n\ninterface GroupPanelProps {\n  showGroupByPanel: boolean;\n  groupedColumns: string[];\n  columns: ColumnDef[];\n  setColumnGrouped: (field: string, grouped: boolean) => void;\n  handleGroupDrop: (e: React.DragEvent) => void;\n}\n\nexport const GroupPanel: React.FC<GroupPanelProps> = ({\n  showGroupByPanel,\n  groupedColumns,\n  columns,\n  setColumnGrouped,\n  handleGroupDrop,\n}) => {\n  if (!showGroupByPanel) return null;\n\n  return (\n    <>\n      <div\n        className=\"min-h-[40px] border border-dashed border-[#353945] rounded flex flex-wrap gap-2 items-center p-2 bg-[#232733]\"\n        onDragOver={(e) => {\n          e.preventDefault();\n          e.dataTransfer.dropEffect = \"move\";\n        }}\n        onDrop={handleGroupDrop}\n      >\n        <span className=\"text-gray-400 text-sm\">\n          Drag columns here to group\n        </span>\n      </div>\n      <div className=\"p-2 flex flex-col gap-2\">\n        {groupedColumns.map((field) => {\n          const col = columns.find((c) => c.field === field);\n          return (\n            <div className=\"flex items-center justify-between bg-gray-700 px-2 py-1 rounded-full\">\n              <span key={field} className=\"flex items-center\">\n                <GripVertical className=\"w-3 h-3 mr-1\" />\n                {col?.headerName}\n              </span>\n              <button\n                onClick={() => setColumnGrouped(field, false)}\n                className=\"ml-1 hover:bg-gray-600 rounded-full p-1 cursor-pointer\"\n              >\n                <X className=\"h-3 w-3\" />\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useMemo,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { useVirtualizer, VirtualItem } from \"@tanstack/react-virtual\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  ChevronDown,\n  ChevronUp,\n  ChevronsUpDown,\n  ChevronRight,\n  ListFilter,\n  Calendar,\n  GripVertical,\n  // Sigma,\n  List,\n  // X,\n} from \"lucide-react\";\nimport type { DataGridProps, ColumnDef, GroupObject } from \"@/types/grid\";\nimport { PulseLoader } from \"react-spinners\";\nimport { debounce } from \"lodash\";\nimport CellEditor from \"./CellEditor\";\nimport { cn } from \"@/lib/utils\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { useCookedData } from \"./useCookedData\";\n\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n} from \"@/components/ui/popover\";\nimport {\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n} from \"@/components/ui/tooltip\";\nimport { CellFilter, GetDefaultFilterType } from \"./CellFilter\";\nimport { GroupPanel } from \"./GroupPanel\";\n\nexport const DataGrid = forwardRef<HTMLDivElement, DataGridProps>(\n  (\n    {\n      data = [],\n      onDataChange,\n      columnDefs,\n      loading = false,\n      loadingMessage = \"Loading...\",\n      onRowClick,\n      showGroupByPanel = false,\n      isChild = false,\n      rowSelection,\n    }: DataGridProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    const { getCookedData } = useCookedData(columnDefs);\n    const {\n      columns: propColumns = [],\n      masterDetail = false,\n      detailGridOptions = {},\n      getDetailRowData = undefined,\n      aggFuncs = {},\n      grandTotalRow = \"none\",\n      tableLayout = \"fixed\",\n    } = columnDefs;\n\n    // State\n    const [gridData, setGridData] = useState<Record<string, unknown>[]>([]);\n    const [columns, setColumns] = useState<ColumnDef[]>([]);\n    const [sortConfig, setSortConfig] = useState<{\n      key: string | null;\n      direction: \"asc\" | \"desc\";\n    }>({ key: null, direction: \"asc\" });\n    const [filters, setFilters] = useState<Record<string, string>>({});\n    const [filterTypes, setFilterTypes] = useState<Record<string, string>>({});\n    const [debouncedFilters, setDebouncedFilters] = useState<\n      Record<string, string>\n    >({});\n    const [groupedColumns, setGroupedColumns] = useState<string[]>([]);\n    const [expandedGroups, setExpandedGroups] = useState<\n      Record<string, boolean>\n    >({});\n    const [selectedRows, setSelectedRows] = useState<Record<string, boolean>>(\n      {}\n    );\n\n    // Column drag & drop\n    const [draggedColumn, setDraggedColumn] = useState<string | null>(null);\n    const [dragOverColumn, setDragOverColumn] = useState<string | null>(null);\n    const columnDragCounter = useRef(0);\n    const tableRef = useRef<HTMLTableElement>(null);\n\n    // Cell editing\n    const [editingCell, setEditingCell] = useState<{\n      rowIndex: number;\n      field: string;\n    } | null>(null);\n    const [editValue, setEditValue] = useState(\"\");\n\n    // Master/Detail\n    const [expandedRows, setExpandedRows] = useState<Record<number, boolean>>(\n      {}\n    );\n    const [detailData, setDetailData] = useState<\n      Record<number, Record<string, unknown>[]>\n    >({});\n\n    // Create debounced filter handler using useCallback to maintain reference\n    const debouncedFnRef = useRef<ReturnType<typeof debounce> | undefined>(\n      undefined\n    );\n\n    const debouncedSetFilters = useCallback(\n      (newFilters: Record<string, string>) => {\n        if (debouncedFnRef.current) {\n          debouncedFnRef.current.cancel();\n        }\n        debouncedFnRef.current = debounce((filters: Record<string, string>) => {\n          setDebouncedFilters(filters);\n        }, 300);\n        debouncedFnRef.current(newFilters);\n      },\n      []\n    );\n\n    // Add undo/redo state\n    const [history, setHistory] = useState<{\n      past: Array<Record<string, unknown>[]>;\n      present: Record<string, unknown>[];\n      future: Array<Record<string, unknown>[]>;\n    }>({\n      past: [],\n      present: data,\n      future: [],\n    });\n\n    // Add undo/redo handlers\n    const canUndo = history.past.length > 0;\n    const canRedo = history.future.length > 0;\n    const undo = useCallback(() => {\n      if (!canUndo) return;\n\n      const newPast = history.past.slice(0, -1);\n      const newPresent = history.past[history.past.length - 1];\n      const newFuture = [history.present, ...history.future];\n\n      setHistory({\n        past: newPast,\n        present: newPresent,\n        future: newFuture,\n      });\n      setGridData(newPresent);\n    }, [history, canUndo]);\n\n    const redo = useCallback(() => {\n      if (!canRedo) return;\n\n      const newPast = [...history.past, history.present];\n      const newPresent = history.future[0];\n      const newFuture = history.future.slice(1);\n      setHistory({\n        past: newPast,\n        present: newPresent,\n        future: newFuture,\n      });\n\n      setGridData(newPresent);\n    }, [history, canRedo]);\n\n    // Add keyboard event listener for undo/redo\n    useEffect(() => {\n      const handleKeyDown = (e: KeyboardEvent) => {\n        if (e.metaKey || e.ctrlKey) {\n          if (e.key === \"z\" && !e.shiftKey) {\n            e.preventDefault();\n            undo();\n          } else if (e.key === \"z\" && e.shiftKey) {\n            e.preventDefault();\n            redo();\n          }\n        }\n      };\n\n      window.addEventListener(\"keydown\", handleKeyDown);\n      return () => window.removeEventListener(\"keydown\", handleKeyDown);\n    }, [undo, redo]);\n\n    useImperativeHandle<HTMLDivElement, HTMLDivElement>(ref, () => {\n      const div = document.createElement(\"div\");\n      Object.assign(div, {\n        resetSelection: () => {\n          setSelectedRows({});\n        },\n      });\n      return div;\n    }, []);\n\n    // Initial Setup\n    useEffect(() => {\n      if (data && data.length > 0) {\n        const cookedData = isChild ? data : getCookedData(data);\n        setGridData(cookedData);\n        // Initialize history with current data\n        setHistory({\n          past: [],\n          present: cookedData,\n          future: [],\n        });\n\n        const firstItem = cookedData[0];\n        const extracted = Object.keys(firstItem)\n          .filter((key) => key !== \"children\")\n          .map(\n            (key) =>\n              ({\n                field: key,\n                headerName:\n                  key.charAt(0).toUpperCase() +\n                  key.slice(1).replace(/([A-Z])/g, \" $1\"),\n                type: typeof firstItem[key] === \"number\" ? \"number\" : \"text\",\n                editable: true,\n                width: 150,\n                visible: true,\n                rowGroup: false,\n                aggFunc: typeof firstItem[key] === \"number\" ? \"sum\" : undefined,\n              }) as ColumnDef\n          );\n\n        setColumns(extracted);\n      }\n\n      if (propColumns && propColumns.length > 0) {\n        // Separate grouped and non-grouped columns\n        const groupedCols = propColumns.filter(\n          (col) => col.rowGroup && col.visible !== false\n        );\n        const nonGroupedCols = propColumns.filter(\n          (col) => !col.rowGroup && col.visible !== false\n        );\n\n        // Combine with grouped columns first\n        setColumns([...groupedCols, ...nonGroupedCols]);\n\n        // Initialize groupedColumns from columns with rowGroup=true\n        const initialGroupedColumns = groupedCols.map((col) => col.field);\n        if (initialGroupedColumns.length > 0) {\n          setGroupedColumns(initialGroupedColumns);\n        }\n\n        return;\n      }\n    }, [data, propColumns]);\n\n    // Update filters and trigger debounced update\n    const handleFilterChange = useCallback(\n      (field: string, value: string) => {\n        const newFilters = { ...filters, [field]: value };\n        setFilters(newFilters);\n        debouncedSetFilters(newFilters);\n      },\n      [filters, debouncedSetFilters]\n    );\n\n    // Cleanup debounce on unmount\n    useEffect(() => {\n      return () => {\n        if (debouncedFnRef.current) {\n          debouncedFnRef.current.cancel();\n        }\n      };\n    }, []);\n\n    const handleFilterTypeChange = useCallback(\n      (field: string, type: string) => {\n        setFilterTypes((prev) => ({ ...prev, [field]: type }));\n      },\n      []\n    );\n\n    // Update filteredData to use filter types\n    const filteredData = useMemo(() => {\n      if (!gridData || gridData.length === 0) {\n        return [];\n      }\n\n      const filtered = gridData.filter((row) => {\n        return Object.keys(debouncedFilters).every((field) => {\n          if (!debouncedFilters[field]) return true;\n          const col = columns.find((c) => c.field === field);\n          if (!col) return true;\n\n          const cellValue = row[field];\n          const filterValue = debouncedFilters[field];\n          const filterType = filterTypes[field] || GetDefaultFilterType(col);\n\n          // Handle null/undefined values\n          if (cellValue == null) return false;\n\n          if (col.type === \"number\") {\n            const numValue = Number(cellValue);\n            const filterNum = Number(filterValue);\n\n            switch (filterType) {\n              case \"equals\":\n                return numValue === filterNum;\n              case \"greaterThan\":\n                return numValue > filterNum;\n              case \"lessThan\":\n                return numValue < filterNum;\n              case \"between\": {\n                const [min, max] = filterValue.split(\",\").map(Number);\n                return numValue >= min && numValue <= max;\n              }\n              default:\n                return true;\n            }\n          }\n\n          if (col.type === \"date\") {\n            const dateValue = new Date(cellValue as string);\n            const filterDate = new Date(filterValue);\n\n            switch (filterType) {\n              case \"equals\":\n                return dateValue.toDateString() === filterDate.toDateString();\n              case \"before\":\n                return dateValue < filterDate;\n              case \"after\":\n                return dateValue > filterDate;\n              case \"between\": {\n                const [start, end] = filterValue\n                  .split(\",\")\n                  .map((d) => new Date(d));\n                return dateValue >= start && dateValue <= end;\n              }\n              default:\n                return true;\n            }\n          }\n\n          // Text comparison\n          const cellString = String(cellValue).toLowerCase();\n          const filterString = filterValue.toLowerCase();\n\n          switch (filterType) {\n            case \"equals\":\n              return cellString === filterString;\n            case \"startsWith\":\n              return cellString.startsWith(filterString);\n            case \"endsWith\":\n              return cellString.endsWith(filterString);\n            case \"contains\":\n            default:\n              return cellString.includes(filterString);\n          }\n        });\n      });\n\n      return filtered;\n    }, [gridData, debouncedFilters, filterTypes, columns]);\n\n    // ----------------------------\n    // 2) Sorting\n    // ----------------------------\n    const handleSort = useCallback(\n      (field: string) => {\n        let direction: \"asc\" | \"desc\" = \"asc\";\n        if (sortConfig.key === field && sortConfig.direction === \"asc\") {\n          direction = \"desc\";\n        }\n        setSortConfig({ key: field, direction });\n\n        // Sort the data\n        const sorted = [...gridData].sort((a, b) => {\n          const aValue = a[field] as string | number;\n          const bValue = b[field] as string | number;\n          if (aValue < bValue) return direction === \"asc\" ? -1 : 1;\n          if (aValue > bValue) return direction === \"asc\" ? 1 : -1;\n          return 0;\n        });\n        setGridData(sorted);\n      },\n      [sortConfig, gridData]\n    );\n\n    // If you also want multi-sort with shiftKey, you can adapt accordingly.\n    const handleMultiSort = useCallback(\n      (field: string, e: React.MouseEvent) => {\n        if (e?.shiftKey) {\n          // Multi-sort scenario\n          // For simplicity, we'll just do single-column sort here\n        }\n        handleSort(field);\n      },\n      [handleSort]\n    );\n\n    // ----------------------------\n    // 5) Column Drag & Drop\n    // ----------------------------\n    const handleColumnDragStart = useCallback(\n      (e: React.DragEvent, field: string) => {\n        setDraggedColumn(field);\n        columnDragCounter.current = 0;\n        e.dataTransfer.effectAllowed = \"move\";\n        e.dataTransfer.setData(\"columnField\", field);\n      },\n      []\n    );\n\n    const handleColumnDragOver = useCallback(\n      (e: React.DragEvent, field: string) => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = \"move\";\n        if (dragOverColumn !== field) {\n          setDragOverColumn(field);\n        }\n      },\n      [dragOverColumn]\n    );\n\n    const handleColumnDragEnter = useCallback((e: React.DragEvent) => {\n      e.preventDefault();\n      columnDragCounter.current++;\n    }, []);\n\n    const handleColumnDragLeave = useCallback((e: React.DragEvent) => {\n      e.preventDefault();\n      columnDragCounter.current--;\n      if (columnDragCounter.current === 0) {\n        setDragOverColumn(null);\n      }\n    }, []);\n\n    const handleColumnDrop = useCallback(\n      (e: React.DragEvent, targetField: string) => {\n        e.preventDefault();\n        columnDragCounter.current = 0;\n        setDragOverColumn(null);\n\n        if (!draggedColumn || draggedColumn === targetField) return;\n\n        const sourceIndex = columns.findIndex(\n          (col) => col.field === draggedColumn\n        );\n        const targetIndex = columns.findIndex(\n          (col) => col.field === targetField\n        );\n\n        if (sourceIndex === targetIndex) return;\n\n        // Create new columns array with reordered columns\n        const newCols = [...columns];\n        const [moved] = newCols.splice(sourceIndex, 1);\n        newCols.splice(targetIndex, 0, moved);\n\n        // Important: Preserve column properties and only update order\n        setColumns(newCols);\n\n        // Reset drag state\n        setDraggedColumn(null);\n      },\n      [draggedColumn, columns]\n    );\n\n    const handleColumnDragEnd = useCallback(() => {\n      columnDragCounter.current = 0;\n      setDraggedColumn(null);\n      setDragOverColumn(null);\n    }, []);\n\n    // ----------------------------\n    // 6) Editing\n    // ----------------------------\n    const startEditing = useCallback(\n      (rowIndex: number, field: string, value: string) => {\n        setEditingCell({ rowIndex, field });\n        setEditValue(value);\n      },\n      []\n    );\n\n    const handleEditChange = useCallback(\n      (value: string | number | boolean | Date | null, editorType?: string) => {\n        if (\n          editorType === \"select\" ||\n          editorType === \"date\" ||\n          editorType === \"time\" ||\n          editorType === \"dateTime\" ||\n          editorType === \"checkbox\"\n        ) {\n          if (!editingCell) return;\n          const { field } = editingCell;\n          const newRow = { ...gridData[editingCell.rowIndex], [field]: value };\n          const idxInAll = gridData.findIndex(\n            (r) => r === gridData[editingCell.rowIndex]\n          );\n\n          if (idxInAll !== -1) {\n            const previousRecord = gridData[editingCell.rowIndex];\n            const newData = [...gridData];\n            const cookedData = getCookedData(newData);\n            newData[idxInAll] = newRow;\n\n            //For notify parent with new record, previous record and field\n            if (onDataChange) {\n              onDataChange(newRow, previousRecord, field);\n            }\n            setGridData(cookedData);\n\n            // Update history with current state before making changes\n            setHistory((prev) => ({\n              past: [...prev.past, prev.present],\n              present: cookedData,\n              future: [],\n            }));\n          }\n          setEditingCell(null);\n          setEditValue(\"\");\n        } else {\n          setEditValue(String(value));\n        }\n      },\n      [editingCell, gridData, onDataChange]\n    );\n\n    const handleEditChangeCheckbox = useCallback(\n      (value: boolean, rowIndex: number, field: string) => {\n        const newRow = { ...gridData[rowIndex], [field]: value };\n        const idxInAll = gridData.findIndex((r) => r === gridData[rowIndex]);\n\n        if (idxInAll !== -1) {\n          const newData = [...gridData];\n          newData[idxInAll] = newRow;\n          const cookedData = getCookedData(newData);\n          setGridData(cookedData);\n\n          // Update history with current state before making changes\n          setHistory((prev) => ({\n            past: [...prev.past, prev.present],\n            present: cookedData,\n            future: [],\n          }));\n\n          //For notify parent with new record, previous record and field\n          if (onDataChange) {\n            onDataChange(newRow, gridData[rowIndex], field);\n          }\n        }\n        setEditingCell(null);\n        setEditValue(\"\");\n      },\n      [gridData, onDataChange]\n    );\n\n    // ----------------------------\n    // 7) Master/Detail\n    // ----------------------------\n    const toggleRowExpand = useCallback(\n      (rowIndex: number) => {\n        setExpandedRows((prev) => {\n          const newState = { ...prev };\n          if (newState[rowIndex]) {\n            delete newState[rowIndex];\n          } else {\n            newState[rowIndex] = true;\n            // Get detail data from children if available\n            const row = gridData[rowIndex];\n            if (row && row.children) {\n              setDetailData((old) => ({\n                ...old,\n                [rowIndex]: row.children as Record<string, unknown>[],\n              }));\n            } else if (getDetailRowData) {\n              // Fallback to getDetailRowData if no children\n              getDetailRowData({\n                data: row,\n                successCallback: (detail) => {\n                  setDetailData((old) => ({ ...old, [rowIndex]: detail }));\n                },\n              });\n            }\n          }\n          return newState;\n        });\n      },\n      [gridData, getDetailRowData]\n    );\n\n    // ----------------------------\n    // 8) Row Grouping\n    // ----------------------------\n    const toggleGroupExpand = useCallback((groupKey: string) => {\n      setExpandedGroups((prev) => {\n        const newState = { ...prev };\n        if (newState[groupKey]) {\n          delete newState[groupKey];\n        } else {\n          newState[groupKey] = true;\n        }\n        return newState;\n      });\n    }, []);\n\n    const setColumnGrouped = useCallback(\n      (field: string, grouped: boolean) => {\n        // Update columns\n        const newColumns = columns.map((col) => {\n          if (col.field === field) {\n            return { ...col, rowGroup: grouped };\n          }\n          return col;\n        });\n\n        // If grouping is enabled, move the grouped column to the start\n        if (grouped) {\n          const groupedColumn = newColumns.find((col) => col.field === field);\n          if (groupedColumn) {\n            const filteredColumns = newColumns.filter(\n              (col) => col.field !== field\n            );\n            setColumns([groupedColumn, ...filteredColumns]);\n          }\n        } else {\n          setColumns(newColumns);\n        }\n\n        // Update groupedColumns\n        setGroupedColumns((prev) => {\n          if (grouped) {\n            if (!prev.includes(field)) {\n              return [...prev, field];\n            }\n            return prev;\n          } else {\n            return prev.filter((f) => f !== field);\n          }\n        });\n      },\n      [columns]\n    );\n\n    // ----------------------------\n    // Group & Flatten Data for Virtualization\n    // ----------------------------\n    const calculateAggregation = useCallback(\n      (values: unknown[], aggFunc: string) => {\n        if (!values || values.length === 0) return 0;\n        // Check if it's a custom aggregation function\n        if (typeof aggFunc === \"string\" && aggFuncs[aggFunc]) {\n          return aggFuncs[aggFunc]({ values });\n        }\n\n        // Handle built-in aggregation functions\n        switch (aggFunc) {\n          case \"sum\":\n            return values.reduce(\n              (acc: number, val) => acc + (Number(val) || 0),\n              0\n            );\n          case \"avg\": {\n            const sum = values.reduce(\n              (acc: number, val) => acc + (Number(val) || 0),\n              0\n            );\n            return sum / values.length;\n          }\n          case \"min\":\n            return Math.min(...values.map((v) => Number(v)));\n          case \"max\":\n            return Math.max(...values.map((v) => Number(v)));\n          case \"count\":\n            return values.length;\n          default:\n            return values[0];\n        }\n      },\n      [aggFuncs]\n    );\n\n    const groupedData = useMemo(() => {\n      if (!filteredData || filteredData.length === 0) {\n        return null;\n      }\n\n      if (groupedColumns.length === 0) return null;\n\n      const groupFields = groupedColumns;\n\n      // Recursively group the data\n      function groupData(\n        rows: Record<string, unknown>[],\n        level = 0,\n        parentKey = \"\"\n      ): GroupObject[] {\n        if (level >= groupFields.length)\n          return rows as unknown as GroupObject[];\n\n        const field = groupFields[level];\n        const groupsMap: Record<string, GroupObject> = {};\n\n        rows.forEach((item) => {\n          const gVal = item[field];\n          const gKey = parentKey\n            ? `${parentKey}__${String(gVal)}`\n            : `${field}__${String(gVal)}`;\n\n          if (!groupsMap[gKey]) {\n            groupsMap[gKey] = {\n              field,\n              value: gVal,\n              key: gKey,\n              level,\n              children: [],\n              isGroup: true,\n              originalChildren: item.children as\n                | Record<string, unknown>[]\n                | undefined,\n              aggregations: {},\n            };\n          }\n          groupsMap[gKey].children.push(item);\n        });\n\n        // Calculate aggregations for all numeric columns\n        Object.values(groupsMap).forEach((groupObj) => {\n          columns.forEach((col) => {\n            if (col.type === \"number\" && col.aggFunc) {\n              const values = groupObj.children\n                .map((child: Record<string, unknown>) => child[col.field])\n                .filter((val: unknown) => val != null);\n              if (values.length > 0) {\n                groupObj.aggregations[col.field] = calculateAggregation(\n                  values,\n                  col.aggFunc\n                );\n              }\n            }\n          });\n\n          if (level < groupFields.length - 1) {\n            groupObj.children = groupData(\n              groupObj.children,\n              level + 1,\n              groupObj.key\n            );\n          }\n        });\n\n        return Object.values(groupsMap);\n      }\n\n      const result = groupData(filteredData, 0, \"\");\n      return result;\n    }, [filteredData, groupedColumns, columns]);\n\n    const flattenedRows = useMemo(() => {\n      const flatList: Array<{\n        type: string;\n        groupKey?: string;\n        groupField?: string;\n        groupValue?: unknown;\n        level?: number;\n        indent?: number;\n        itemCount?: number;\n        aggregations?: Record<string, unknown>;\n        row?: Record<string, unknown>;\n        rowIndex?: number;\n        parentRow?: Record<string, unknown>;\n        parentIndex?: number;\n      }> = [];\n\n      if (!filteredData || filteredData.length === 0) {\n        return flatList;\n      }\n\n      if (groupedData) {\n        // Handle grouped data\n        const walkGroups = (\n          groups: GroupObject[],\n          indentLevel = 0,\n          parentIndex = 0\n        ) => {\n          groups.forEach((group, groupIndex) => {\n            // Add group header with aggregations\n            flatList.push({\n              type: \"group\",\n              groupKey: group.key,\n              groupField: group.field,\n              groupValue: group.value,\n              level: group.level,\n              indent: indentLevel,\n              itemCount: group.children.length,\n              aggregations: group.aggregations,\n            });\n\n            // If group is expanded, add children\n            if (expandedGroups[group.key]) {\n              if (group.children[0]?.isGroup) {\n                // Nested groups - cast to GroupObject[]\n                walkGroups(\n                  group.children as unknown as GroupObject[],\n                  indentLevel + 1,\n                  parentIndex + groupIndex\n                );\n              } else {\n                // Data rows\n                group.children.forEach(\n                  (row: Record<string, unknown>, index: number) => {\n                    const absoluteIndex = parentIndex + groupIndex + index;\n                    flatList.push({\n                      type: \"data\",\n                      row,\n                      rowIndex: absoluteIndex,\n                      indent: indentLevel + 1,\n                    });\n                    // Add detail row if expanded\n                    if (masterDetail && expandedRows[absoluteIndex]) {\n                      flatList.push({\n                        type: \"detail\",\n                        parentRow: row,\n                        parentIndex: absoluteIndex,\n                        indent: indentLevel + 2,\n                      });\n                    }\n                  }\n                );\n              }\n            }\n          });\n        };\n\n        walkGroups(groupedData, 0, 0);\n      } else {\n        // Handle flat data\n        filteredData.forEach((row, index) => {\n          flatList.push({\n            type: \"data\",\n            row,\n            rowIndex: index,\n            indent: 0,\n          });\n          if (masterDetail && expandedRows[index]) {\n            flatList.push({\n              type: \"detail\",\n              parentRow: row,\n              parentIndex: index,\n              indent: 1,\n            });\n          }\n        });\n      }\n\n      return flatList;\n    }, [filteredData, groupedData, expandedGroups, expandedRows, masterDetail]);\n\n    // Or modify it to only expand on initial load if you want that behavior\n    useEffect(() => {\n      if (groupedData && groupedColumns.length === 1) {\n        // Only for first grouping\n        setExpandedGroups({}); // Reset expanded groups when grouping changes\n      }\n    }, [groupedData, groupedColumns]);\n\n    // ----------------------------\n    // 9) Virtualization Setup\n    // ----------------------------\n    const scrollParentRef = useRef<HTMLTableSectionElement>(null);\n\n    const rowVirtualizer = useVirtualizer({\n      count: flattenedRows.length,\n      getScrollElement: () => scrollParentRef.current,\n      estimateSize: (index) => {\n        const item = flattenedRows[index];\n        // Dynamically calculate detail row height based on content\n        if (item?.type === \"detail\") {\n          const detailRows = detailData[item.parentIndex || 0]?.length || 0;\n          // Calculate height: header (40px) + rows (40px each) + padding (16px) + extra padding to prevent overlap (16px)\n          const calculatedHeight = Math.min(detailRows * 40 + 72, 600); // Cap at 600px\n          return calculatedHeight;\n        }\n        return 40; // Standard row height\n      },\n      useAnimationFrameWithResizeObserver: true,\n      overscan: 5,\n    });\n\n    // ----------------------------\n    // 10) Rendering: Flattened Virtual Rows\n    // ----------------------------\n    // Which columns do we show? (Ignore rowGroup columns except the first if needed)\n    const displayColumns = useMemo(() => {\n      return columns.filter((col) => col.visible !== false);\n    }, [columns]);\n\n    // Add a helper function to get cell value\n    const getCellValue = (\n      row: Record<string, unknown>,\n      field: string,\n      col: ColumnDef\n    ): unknown => {\n      // If the row has aggregations and this is an aggregated column, use the aggregation value\n      if (\n        (row as GroupObject).aggregations &&\n        col.aggFunc &&\n        (row as GroupObject).aggregations[field] !== undefined\n      ) {\n        return (row as GroupObject).aggregations[field];\n      }\n\n      // Otherwise, use the field value\n      return row[field];\n    };\n\n    // Add a helper function to format cell value using valueFormatter if available\n    const formatCellValue = (\n      value: unknown,\n      row: Record<string, unknown>,\n      col: ColumnDef\n    ) => {\n      if (col.valueFormatter) {\n        return col.valueFormatter({ value, data: row });\n      }\n      return value ? String(value) : \"\";\n    };\n\n    /**\n     * Inline helper: Render a single \"virtual item\" row.\n     * We'll handle group vs. data vs. detail row by checking flattenedRows[idx].type.\n     */\n    const renderRow = (virtualRow: VirtualItem) => {\n      const item = flattenedRows[virtualRow.index];\n      if (!item) {\n        return null;\n      }\n\n      // 1) Group Header Row\n      if (item.type === \"group\") {\n        const isExpanded = item.groupKey\n          ? expandedGroups[item.groupKey]\n          : false;\n        const groupColumn = columns.find(\n          (col) => col.field === item.groupField\n        );\n\n        return (\n          <TableRow\n            key={virtualRow.key}\n            data-index={virtualRow.index}\n            ref={rowVirtualizer.measureElement}\n            style={{\n              position: \"absolute\",\n              transform: `translateY(${virtualRow.start}px)`,\n              width: \"100%\",\n              display: \"table\",\n              tableLayout: \"fixed\",\n              top: 0,\n            }}\n            className={cn(\"hover:bg-gray-100\")}\n          >\n            {displayColumns.map((col, colIndex) => {\n              const isGroupColumn = col.field === item.groupField;\n              return (\n                <TableCell\n                  key={`${colIndex}-${col.field}`}\n                  style={{\n                    ...getCellWidth(col),\n                    textWrap: \"initial\",\n                    overflow: \"hidden\",\n                    cursor: \"text\",\n                  }}\n                  className=\"p-0\"\n                >\n                  {isGroupColumn ? (\n                    <div\n                      className=\"flex items-center cursor-pointer w-full\"\n                      onClick={() =>\n                        item.groupKey && toggleGroupExpand(item.groupKey)\n                      }\n                    >\n                      {isExpanded ? (\n                        <ChevronDown className=\"h-5 w-5 mr-1\" />\n                      ) : (\n                        <ChevronRight className=\"h-5 w-5 mr-1\" />\n                      )}\n                      <div>\n                        <p className=\"font-medium\">\n                          {groupColumn\n                            ? `${String(item.groupValue)}`\n                            : String(item.groupValue)}\n                        </p>\n                        <p className=\"text-gray-500 font-[10px]\">\n                          ({item.itemCount} items)\n                        </p>\n                      </div>\n                    </div>\n                  ) : col.aggFunc &&\n                    item.aggregations &&\n                    item.aggregations[col.field] !== undefined ? (\n                    <div className=\"w-full\">\n                      <div className=\"flex items-center bg-gray-100 px-2 w-[min-content] rounded-md text-sm\">\n                        <span className=\"text-gray-600 capitalize\">\n                          {col.aggFunc}\n                        </span>\n                        <span className=\"mx-1 text-gray-500\">:</span>\n                        <span className=\"font-semibold text-gray-900\">\n                          {(() => {\n                            const value = item.aggregations[col.field];\n                            switch (col.aggFunc) {\n                              case \"avg\":\n                                return (value as number).toFixed(2);\n                              case \"count\":\n                                return Math.round(value as number).toString();\n                              default:\n                                return (value as number).toLocaleString();\n                            }\n                          })()}\n                        </span>\n                      </div>\n                    </div>\n                  ) : null}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        );\n      }\n\n      // 2) Data Row\n      if (item.type === \"data\") {\n        const { row, indent, rowIndex } = item;\n        const isExpanded =\n          rowIndex !== undefined ? expandedRows[rowIndex] : false;\n        let expandButton: React.ReactNode = null;\n        if (\n          row?.children &&\n          Array.isArray(row.children) &&\n          row.children.length > 0\n        ) {\n          expandButton = (\n            <button\n              className=\"mr-2 focus:outline-none\"\n              onClick={() =>\n                rowIndex !== undefined && toggleRowExpand(rowIndex)\n              }\n            >\n              {isExpanded ? (\n                <ChevronDown className=\"h-4 w-4\" />\n              ) : (\n                <ChevronRight className=\"h-4 w-4\" />\n              )}\n            </button>\n          );\n        }\n        return (\n          <TableRow\n            key={virtualRow.key}\n            data-index={virtualRow.index}\n            ref={rowVirtualizer.measureElement}\n            style={{\n              position: \"absolute\",\n              transform: `translateY(${virtualRow.start}px)`,\n              width: \"100%\",\n              display: \"table\",\n              tableLayout: \"fixed\",\n              top: 0,\n            }}\n            className={cn({\n              \"bg-blue-100\": rowIndex !== undefined && selectedRows[rowIndex],\n              \"hover:bg-gray-100\": true,\n            })}\n            onClick={() =>\n              onRowClick?.({\n                data: row as Record<string, unknown>,\n                rowIndex: rowIndex as number,\n              })\n            }\n          >\n            {rowSelection && (\n              <TableCell key={`checkbox-cell-${rowIndex}`} className=\"w-[50px]\">\n                <div className=\"w-[30px] flex justify-center items-center\">\n                  <Checkbox\n                    checked={\n                      rowIndex !== undefined ? !!selectedRows[rowIndex] : false\n                    }\n                    onCheckedChange={(checked: boolean) => {\n                      handleRowCheckboxChange(rowIndex, checked);\n                    }}\n                    onClick={(e: { stopPropagation: () => void }) => {\n                      e.stopPropagation();\n                    }}\n                    className={\"border-1 border-gray-400 cursor-pointer\"}\n                  />\n                </div>\n              </TableCell>\n            )}\n\n            {displayColumns.map((col, colIndex) => {\n              const cellRenderer = col.cellRenderer;\n              const cellValue = row\n                ? getCellValue(row, col.field, col)\n                : undefined;\n              const isEditing =\n                editingCell &&\n                editingCell.rowIndex === rowIndex &&\n                editingCell.field === col.field;\n\n              // If it's the first column and there's master detail, show expand button\n              if (colIndex === 0 && masterDetail) {\n                return (\n                  <TableCell\n                    key={`${colIndex}-${col.field}`}\n                    style={{\n                      ...getCellWidth(col),\n                      overflow: \"hidden\",\n                      cursor: col.editable ? \"pointer\" : \"text\",\n                      textWrap: \"initial\",\n                    }}\n                  >\n                    <div\n                      className=\"flex items-center w-full\"\n                      style={{ paddingLeft: `${(indent || 0) * 20}px` }}\n                    >\n                      {expandButton}\n                      {formatCellValue(cellValue, row || {}, col)}\n                    </div>\n                  </TableCell>\n                );\n              }\n\n              return (\n                <TableCell\n                  key={col.field}\n                  style={{\n                    ...getCellWidth(col),\n                    overflow: \"hidden\",\n                    cursor: col.editable ? \"pointer\" : \"text\",\n                    textWrap: \"wrap\",\n                    whiteSpace: \"normal\",\n                    wordBreak: \"break-word\",\n                  }}\n                  className={cn(isEditing ? \"p-[0px]\" : \"\")}\n                  onDoubleClick={() => {\n                    if (\n                      !cellRenderer &&\n                      col.editable &&\n                      rowIndex !== undefined &&\n                      col.editorType !== \"checkbox\" &&\n                      !col.rowGroup\n                    ) {\n                      startEditing(rowIndex, col.field, String(cellValue));\n                    }\n                  }}\n                >\n                  {cellRenderer ? (\n                    React.createElement(\n                      cellRenderer as React.ComponentType<{\n                        value: unknown;\n                        data: Record<string, unknown> | undefined;\n                        rowIndex: number | undefined;\n                      }>,\n                      {\n                        value: cellValue,\n                        data: row,\n                        rowIndex: rowIndex,\n                      }\n                    )\n                  ) : isEditing && col.editorType !== \"checkbox\" ? (\n                    <CellEditor\n                      value={editValue}\n                      columnDef={{\n                        editorType: col.editorType || \"text\",\n                        editorParams: col.editorParams,\n                      }}\n                      onChange={(value) =>\n                        handleEditChange(value, col.editorType)\n                      }\n                      onBlur={() => {\n                        // Commit changes\n                        if (\n                          !editingCell &&\n                          col.editorType !== \"select\" &&\n                          col.editorType !== \"date\" &&\n                          col.editorType !== \"checkbox\"\n                        )\n                          return;\n                        const { field } = editingCell;\n                        const updatedData = col.valueSetter\n                          ? col.valueSetter({ value: editValue })\n                          : { [field]: editValue };\n\n                        const newRow = { ...row, ...updatedData };\n                        const idxInAll = gridData.findIndex((r) => r === row);\n                        if (idxInAll !== -1) {\n                          const newData = [...gridData];\n                          newData[idxInAll] = newRow;\n                          const cookedData = getCookedData(newData);\n                          setGridData([...cookedData]);\n                          setHistory((prev) => ({\n                            past: [...prev.past, prev.present],\n                            present: cookedData,\n                            future: [],\n                          }));\n                        }\n                        //For notify parent with new record, previous record and field\n                        if (onDataChange) {\n                          onDataChange(newRow, gridData[rowIndex], field);\n                        }\n                        setEditingCell(null);\n                        setEditValue(\"\");\n                      }}\n                      onKeyDown={(e: React.KeyboardEvent<Element>) => {\n                        if (e.key === \"Enter\" || e.key === \"Escape\") {\n                          (e.currentTarget as HTMLElement).blur();\n                        }\n                      }}\n                    />\n                  ) : col.editorType === \"checkbox\" && col.editable ? (\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id={`${rowIndex}-${col.field}`}\n                        className=\"cursor-pointer\"\n                        onCheckedChange={(value: boolean) =>\n                          handleEditChangeCheckbox(value, rowIndex!, col.field)\n                        }\n                        checked={cellValue as boolean}\n                      />\n                    </div>\n                  ) : (\n                    <div className=\"w-full\">\n                      {col.tooltipField ? (\n                        <Tooltip>\n                          <TooltipTrigger asChild>\n                            <span>\n                              {col.rowGroup\n                                ? \"\"\n                                : formatCellValue(cellValue, row || {}, col)}\n                            </span>\n                          </TooltipTrigger>\n                          <TooltipContent className=\"\">\n                            {col.tooltipField && row?.[col.tooltipField]\n                              ? String(row[col.tooltipField])\n                              : col.rowGroup\n                                ? \"\"\n                                : formatCellValue(cellValue, row || {}, col)}\n                          </TooltipContent>\n                        </Tooltip>\n                      ) : (\n                        formatCellValue(cellValue, row || {}, col)\n                      )}\n                    </div>\n                  )}\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        );\n      }\n\n      // 3) Detail Row\n      if (item.type === \"detail\") {\n        const { parentIndex } = item;\n\n        return (\n          <TableRow\n            key={virtualRow.key}\n            data-index={virtualRow.index}\n            ref={rowVirtualizer.measureElement}\n            style={{\n              position: \"absolute\",\n              transform: `translateY(${virtualRow.start}px)`,\n              width: \"100%\",\n              display: \"table\",\n              tableLayout: \"fixed\",\n              top: 0,\n            }}\n          >\n            <TableCell\n              colSpan={displayColumns.length}\n              style={{\n                padding: 0,\n                backgroundColor: \"white\",\n                position: \"relative\",\n                overflow: \"hidden\",\n                width: \"100%\",\n                zIndex: 30,\n              }}\n            >\n              <div\n                className=\"detail-grid-container\"\n                style={{\n                  padding: \"20px\",\n                  overflow: \"auto\",\n                  position: \"relative\",\n                  backgroundColor: \"white\",\n                  width: \"100%\",\n                  zIndex: 30,\n                }}\n              >\n                {parentIndex !== undefined && detailData[parentIndex] ? (\n                  <div\n                    className=\"h-full w-full datagrid-container\"\n                    style={{\n                      position: \"relative\",\n                      zIndex: 30,\n                      overflow: \"visible\", // Allow dropdowns to overflow\n                    }}\n                  >\n                    <DataGrid\n                      columnDefs={detailGridOptions}\n                      data={detailData[parentIndex]}\n                      isChild={true}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"h-full w-full flex items-center justify-center\">\n                    Loading detail data...\n                  </div>\n                )}\n              </div>\n            </TableCell>\n          </TableRow>\n        );\n      }\n\n      return null;\n    };\n\n    // Modify the group drop handler\n    const handleGroupDrop = useCallback(\n      (e: React.DragEvent) => {\n        e.preventDefault();\n        const field = e.dataTransfer.getData(\"columnField\");\n        if (field && !groupedColumns.includes(field)) {\n          setColumnGrouped(field, true);\n        }\n      },\n      [groupedColumns, setColumnGrouped]\n    );\n\n    // // Add this effect to ensure data consistency\n    // useEffect(() => {\n    //   if (data && data.length > 0 && columns.length > 0) {\n    //     setGridData(data);\n    //   }\n    // }, [data, columns]);\n\n    // Add total row calculation\n    const calculateTotals = useMemo(() => {\n      const totals: Record<string, number> = {};\n\n      // Only calculate for numeric columns\n      columns.forEach((col) => {\n        if (col.type === \"number\") {\n          const sum = gridData.reduce((acc, row) => {\n            const value = Number(row[col.field]) || 0;\n            return acc + value;\n          }, 0);\n          totals[col.field] = sum;\n        }\n      });\n\n      return totals;\n    }, [gridData, columns]);\n\n    const getCellWidth = (col: ColumnDef) => {\n      if (tableLayout === \"auto\") {\n        return {\n          width: col.width ? Math.min(col.width, 250) : 220,\n          minWidth: col.width ? Math.min(col.width, 250) : 220,\n          maxWidth: 250,\n        };\n      }\n      return {\n        width: \"intital\",\n      };\n    };\n\n    const renderTotalRow = () => (\n      <div\n        className={`bg-gray-100  ${\n          grandTotalRow === \"bottom\" ? \"sticky bottom-0\" : \"sticky top-0\"\n        }`}\n      >\n        <Table\n          className={`${\n            tableLayout === \"fixed\" ? \"table-fixed\" : \"table-auto\"\n          } border-b border-gray-200`}\n        >\n          <TableBody>\n            <TableRow>\n              {displayColumns.map((col, index) => (\n                <TableCell\n                  key={col.field}\n                  style={{\n                    ...getCellWidth(col),\n                  }}\n                >\n                  {col.type === \"number\" ? (\n                    <div className=\"font-semibold\">\n                      {calculateTotals[col.field]?.toLocaleString()}\n                    </div>\n                  ) : (\n                    <div className=\"font-semibold\">\n                      {index === 0 ? \"Total\" : \"\"}\n                    </div>\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableBody>\n        </Table>\n      </div>\n    );\n\n    /**\n     * Handles the selection and deselection of a single row in the DataGrid.\n     * Updates the selectedRows state based on the checkbox state.\n     */\n    const handleRowCheckboxChange = (\n      rowIndex: number | undefined,\n      checked: boolean\n    ) => {\n      if (rowIndex === undefined) return;\n      setSelectedRows((prev) => {\n        if (rowSelection && rowSelection.mode === \"single\") {\n          // Only allow one row to be selected at a time\n          return checked ? { [rowIndex]: true } : {};\n        }\n        const updated = { ...prev };\n        if (checked) {\n          updated[rowIndex] = true;\n        } else {\n          delete updated[rowIndex];\n        }\n        return updated;\n      });\n    };\n\n    /**\n     * Handles the selection and deselection of all rows in the DataGrid when the header checkbox is toggled.\n     */\n    const handleHeaderCheckboxChange = (checked: boolean) => {\n      if (rowSelection && rowSelection.mode === \"single\") {\n        // In single mode, header checkbox should select only the first row or deselect all\n        if (checked && gridData.length > 0) {\n          setSelectedRows({ 0: true });\n        } else {\n          setSelectedRows({});\n        }\n        return;\n      }\n      if (checked) {\n        const allSelected: Record<string, boolean> = {};\n        gridData.forEach((row, idx) => {\n          allSelected[idx] = true;\n        });\n        setSelectedRows(allSelected);\n      } else {\n        setSelectedRows({});\n      }\n    };\n\n    // Add useEffect to call onRowSelectionChange when selectedRows changes\n    useEffect(() => {\n      if (rowSelection && typeof rowSelection?.getSelectedRows === \"function\") {\n        const selectedData = Object.entries(selectedRows)\n          .filter(([, isSelected]) => isSelected)\n          .map(([index]) => data[+index]);\n        rowSelection?.getSelectedRows(selectedData);\n      }\n    }, [selectedRows]);\n\n    const [search, setSearch] = useState(\"\");\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    // Update the main grid container JSX\n    return (\n      <div className=\"relative w-[100%] h-full\">\n        {/* Loading Overlay */}\n        {loading && (\n          <div className=\"absolute inset-0 bg-white/80 backdrop-blur-sm z-50 flex flex-col items-center justify-center\">\n            <div className=\"text-center\">\n              <PulseLoader color=\"#4f46e5\" size={15} />\n              <p className=\"mt-4 text-gray-600\">{loadingMessage}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Grand Total Row (Top) */}\n        {gridData.length > 0 && grandTotalRow === \"top\" && renderTotalRow()}\n        <div className=\"flex h-full max-h-[100vh]\">\n          {/* Scrollable container for the virtualized rows */}\n          <div\n            style={{\n              overflow: \"auto\",\n              height: \"100%\",\n            }}\n            ref={scrollParentRef}\n          >\n            <Table\n              ref={tableRef}\n              className={cn(\n                \"w-full border-b border-l border-r border-gray-200\"\n              )}\n              style={{\n                tableLayout,\n              }}\n            >\n              <TableHeader className=\"sticky top-0 z-30 bg-gray-200 shadow-sm\">\n                <TableRow className=\"divide-x divide-gray-300\">\n                  {rowSelection && (\n                    <TableHead className=\"w-[50px]\">\n                      <div className=\"w-[30px] flex justify-center items-center\">\n                        <Checkbox\n                          checked={\n                            Object.keys(selectedRows).length > 0 &&\n                            Object.keys(selectedRows).length === gridData.length\n                          }\n                          onCheckedChange={handleHeaderCheckboxChange}\n                          className={\"border-1 border-gray-400 cursor-pointer\"}\n                        />\n                      </div>\n                    </TableHead>\n                  )}\n\n                  {displayColumns.map((col) => {\n                    const isDragged = draggedColumn === col.field;\n                    const isDragOver = dragOverColumn === col.field;\n\n                    return (\n                      <TableHead\n                        key={col.field}\n                        draggable={showGroupByPanel}\n                        className={cn(\"top-0 z-10 transition-colors\", {\n                          \"opacity-50\": isDragged,\n                          \"border-1 border-gray-400\": isDragOver,\n                          \"cursor-move\": showGroupByPanel,\n                        })}\n                        style={{\n                          ...getCellWidth(col),\n                        }}\n                        onDragStart={(e) => {\n                          handleColumnDragStart(e, col.field);\n                          e.dataTransfer.setData(\"columnField\", col.field);\n                        }}\n                        onDragOver={(e) => handleColumnDragOver(e, col.field)}\n                        onDragEnter={handleColumnDragEnter}\n                        onDragLeave={handleColumnDragLeave}\n                        onDrop={(e) => handleColumnDrop(e, col.field)}\n                        onDragEnd={handleColumnDragEnd}\n                      >\n                        <div className=\"w-inherit flex items-center\">\n                          <div className=\"flex-1 flex items-center justify-between w-[85%]\">\n                            <div\n                              className=\"group flex items-center cursor-pointer font-semibold w-full text-gray-700\"\n                              onClick={(e) => handleMultiSort(col.field, e)}\n                            >\n                              <Tooltip>\n                                <TooltipTrigger asChild>\n                                  <div\n                                    className=\"w-[85%] break-words whitespace-normal\"\n                                    style={{ textWrap: \"initial\" }}\n                                  >\n                                    <p>{col.headerName}</p>\n                                  </div>\n                                </TooltipTrigger>\n                                {col.headerTooltip && (\n                                  <TooltipContent className={\"\"}>\n                                    {col.headerTooltip}\n                                  </TooltipContent>\n                                )}\n                              </Tooltip>\n\n                              <span className=\"ml-1 w-[10%] opacity-0 group-hover:opacity-100 transition-opacity duration-150\">\n                                {sortConfig.key === col.field ? (\n                                  sortConfig.direction === \"asc\" ? (\n                                    <ChevronUp className=\"h-4 w-4 text-gray-400\" />\n                                  ) : (\n                                    <ChevronDown className=\"h-4 w-4 text-gray-400\" />\n                                  )\n                                ) : (\n                                  <ChevronsUpDown className=\"h-4 w-4 text-gray-400\" />\n                                )}\n                              </span>\n                            </div>\n                            {col.showFilter !== false && (\n                              <div className=\"relative group\">\n                                <Popover>\n                                  <PopoverTrigger asChild>\n                                    <div\n                                      className=\"p-1 hover:bg-gray-200 rounded cursor-pointer filter-icon\"\n                                      data-column={col.field}\n                                    >\n                                      <ListFilter\n                                        className={`h-4 w-4 ${\n                                          filters[col.field]\n                                            ? \"text-blue-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      />\n                                    </div>\n                                  </PopoverTrigger>\n                                  <PopoverContent className=\"w-auto min-w-[220px] max-w-[250px] p-3 rounded-md shadow-lg bg-white border border-gray-200\">\n                                    <CellFilter\n                                      column={col}\n                                      value={filters[col.field] || \"\"}\n                                      filterType={filterTypes[col.field]}\n                                      onFilterChange={(value) =>\n                                        handleFilterChange(col.field, value)\n                                      }\n                                      onFilterTypeChange={(type) =>\n                                        handleFilterTypeChange(col.field, type)\n                                      }\n                                      onClear={() =>\n                                        handleFilterChange(col.field, \"\")\n                                      }\n                                    />\n                                  </PopoverContent>\n                                </Popover>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </TableHead>\n                    );\n                  })}\n                </TableRow>\n              </TableHeader>\n\n              {/* Virtualized Body */}\n              <TableBody\n                style={{\n                  height: `${rowVirtualizer.getTotalSize()}px`,\n                  position: \"relative\",\n                }}\n              >\n                {rowVirtualizer\n                  .getVirtualItems()\n                  .map((virtualRow) => renderRow(virtualRow))}\n\n                {/* If no data: simple fallback */}\n                {flattenedRows.length === 0 && (\n                  <TableRow className=\"h-24 text-center\">\n                    <TableCell\n                      colSpan={displayColumns.length}\n                      className=\"h-24 text-center\"\n                    >\n                      No results found\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n          {showGroupByPanel && flattenedRows.length !== 0 && (\n            <div\n              style={{\n                width: \"auto\",\n                display: \"flex\",\n              }}\n            >\n              {/* Right Sidebar (inside table view) */}\n              {sidebarOpen && (\n                <aside\n                  style={{\n                    backgroundColor: \"#1f2937\", // bg-gray-900\n                    color: \"#ffffff\", // text-white\n                    padding: \"1rem\", // p-4\n                    borderLeft: \"1px solid #374151\", // border-l border-gray-700\n                    width: \"280px\", // w-[280px]\n                    display: \"flex\", // flex\n                    flexDirection: \"column\", // flex-col\n                    height: \"480px\",\n                    overflowY: \"auto\", // overflow-y-auto\n                    overflowX: \"hidden\", // overflow-x-hidden\n                  }}\n                >\n                  {/* Search and Columns List */}\n                  <div\n                    style={{\n                      padding: \"0.75rem 1rem\", // px-4 py-3\n                      borderBottom: \"1px solid #353945\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: \"0.5rem\",\n                        marginBottom: \"0.75rem\",\n                      }}\n                    >\n                      <Checkbox\n                        style={{\n                          borderWidth: 1,\n                          borderColor: \"#9ca3af\", // border-gray-400\n                          cursor: \"pointer\",\n                        }}\n                        checked={columns.every((col) => col.visible !== false)}\n                        onCheckedChange={(checked: boolean) =>\n                          setColumns((cols) =>\n                            cols.map((c) => ({ ...c, visible: checked }))\n                          )\n                        }\n                        className={undefined}\n                      />\n                      <input\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        value={search}\n                        onChange={(e) => setSearch(e.target.value)}\n                        style={{\n                          backgroundColor: \"#232733\",\n                          border: \"1px solid #353945\",\n                          borderRadius: \"0.25rem\",\n                          padding: \"0.25rem 0.5rem\",\n                          color: \"#ffffff\",\n                          width: \"100%\",\n                          outline: \"none\",\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"0.5rem\",\n                        maxHeight: \"10rem\", // max-h-40 = 160px\n                        overflowY: \"auto\",\n                      }}\n                    >\n                      {columns\n                        .filter((col) =>\n                          col.headerName\n                            .toLowerCase()\n                            .includes(search.toLowerCase())\n                        )\n                        .map((col, idx) => (\n                          <div\n                            key={col.field}\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              gap: \"0.5rem\",\n                            }}\n                          >\n                            <Checkbox\n                              checked={col.visible !== false}\n                              onCheckedChange={(checked: boolean) =>\n                                setColumns((cols) =>\n                                  cols.map((c, i) =>\n                                    i === idx ? { ...c, visible: checked } : c\n                                  )\n                                )\n                              }\n                              style={{\n                                borderWidth: 1,\n                                borderColor: \"#9ca3af\",\n                                cursor: \"pointer\",\n                              }}\n                              className={undefined}\n                            />\n                            <GripVertical\n                              style={{\n                                width: \"1rem\",\n                                height: \"1rem\",\n                                color: \"#9ca3af\",\n                                cursor: \"move\",\n                              }}\n                            />\n                            <span>{col.headerName}</span>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n\n                  {/* Row Groups Section */}\n                  <div\n                    style={{\n                      padding: \"0.75rem 1rem\", // px-4 py-3\n                      borderBottom: \"1px solid #353945\",\n                      flexShrink: 0,\n                    }}\n                  >\n                    <div\n                      style={{\n                        marginBottom: \"0.5rem\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        gap: \"0.5rem\",\n                      }}\n                    >\n                      <List style={{ width: \"1rem\", height: \"1rem\" }} />\n                      <span style={{ fontWeight: 600 }}>Row Groups</span>\n                    </div>\n                    <GroupPanel\n                      showGroupByPanel={showGroupByPanel}\n                      groupedColumns={groupedColumns}\n                      columns={columns}\n                      setColumnGrouped={setColumnGrouped}\n                      handleGroupDrop={handleGroupDrop}\n                    />\n                  </div>\n                </aside>\n              )}\n              {/* Sidebar Toggle Button (when closed) */}\n              <div style={{ height: \"100%\", background: \"#404c58\" }}>\n                <button\n                  onClick={() => setSidebarOpen(!sidebarOpen)}\n                  className=\"px-2 py-1 p-2\"\n                  style={{\n                    cursor: \"pointer\",\n                    writingMode: \"vertical-rl\",\n                    background: sidebarOpen ? \"#2d353d\" : \"#404c58\",\n                    color: \"#ffffff\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    gap: \"5px\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    borderBottom: sidebarOpen\n                      ? \"1px solid #848484\"\n                      : \"transparent\",\n                  }}\n                >\n                  <Calendar className=\"w-4 h-4\" />\n                  Columns\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"sticky bottom-0 bg-white\">\n          {/* Grand Total Row (Bottom) */}\n          {gridData.length > 0 &&\n            grandTotalRow === \"bottom\" &&\n            renderTotalRow()}\n        </div>\n      </div>\n    );\n  }\n);\n\nDataGrid.displayName = \"DataGrid\";\n\nexport default DataGrid;\n"],"names":["cn","inputs","_i","arguments","length","twMerge","clsx","Table","React","forwardRef","_a","ref","className","props","__rest","createElement","__assign","displayName","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","Checkbox","CheckboxPrimitive","Root","Indicator","CheckIcon","Input","type","Select","SelectPrimitive","SelectGroup","Group","SelectValue","Value","SelectTrigger","_b","size","children","Trigger","Icon","asChild","ChevronDownIcon","SelectContent","position","Portal","Content","SelectScrollUpButton","Viewport","SelectScrollDownButton","SelectItem","Item","ItemIndicator","ItemText","ScrollUpButton","ChevronUpIcon","ScrollDownButton","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","sm","lg","icon","defaultVariants","Button","Comp","Slot","Popover","PopoverPrimitive","PopoverTrigger","PopoverContent","align","_c","sideOffset","ScrollBar","orientation","ScrollAreaPrimitive","ScrollAreaScrollbar","ScrollAreaThumb","ScrollArea","Corner","AM_VALUE","PM_VALUE","DateTimePicker","value","onChange","renderTrigger","min","max","timezone","hideTime","use12HourFormat","disabled","clearable","classNames","timePicker","modal","useState","open","setOpen","_d","monthYearPicker","setMonthYearPicker","initDate","useMemo","TZDate","Date","_e","month","setMonth","_f","date","setDate","endMonth","setYear","getYear","minDate","undefined","maxDate","onDayChanged","useCallback","d","setHours","getHours","getMinutes","getSeconds","onSubmit","onMonthYearChanged","mode","onNextMonth","addMonths","onPrevMonth","subMonths","useEffect","displayValue","dislayFormat","format","concat","onOpenChange","trigger","tabIndex","CalendarIcon","role","onClick","e","stopPropagation","preventDefault","XCircle","ChevronLeftIcon","ChevronRightIcon","DayPicker","timeZone","selected","onSelect","after","before","filter","Boolean","onMonthChange","dropdowns","months","month_caption","button_previous","button_next","month_grid","weekdays","weekday","week","day","day_button","range_end","today","outside","range_middle","hidden","showOutsideDays","MonthYearPicker","TimePicker","yearRef","useRef","years","i","startY","startOfYear","endY","endOfYear","push","label","toString","startM","startOfMonth","setMonthFns","endM","endOfMonth","onYearChange","v","newDate","getMonth","current","scrollIntoView","behavior","block","map","year","key","formatStr","ampm","setAmpm","hour","setHour","minute","setMinute","second","setSecond","buildTime","_hourIn24h","hours","Array","from","_","hourValue","hDate","hStart","startOfHour","hEnd","endOfHour","padStart","minutes","anchorDate","mDate","setMinutes","mStart","startOfMinute","mEnd","endOfMinute","seconds","setMilliseconds","_min","_max","sDate","setSeconds","ampmOptions","startD","startOfDay","endD","endOfDay","start","addHours","end","subHours","hourRef","minuteRef","secondRef","timeoutId","setTimeout","clearTimeout","onHourChange","newTime","onMinuteChange","onAmpmChange","minH","maxH","display","arr","element","join","Clock","side","TimeItem","option","options","dateStrRaw","dateStr","slice","parse","SimpleTimePicker","TooltipProvider","delayDuration","TooltipPrimitive","Provider","Tooltip","TooltipTrigger","TooltipContent","Arrow","segmentConfigs","symbols","mergeRefs","refs","node","refs_1","DateTimeInput","formatProp","_value","onKeyDownCustom","onKeyDown","rest","form","useFormContext","inputRef","segments","setSegments","selectedSegmentAt","setSelectedSegmentAt","formState","isSubmitted","parseFormat","curSegment","setCurrentSegment","segment","at","findIndex","s","index","validSegments","inputStr","areAllSegmentsEmpty","every","inputValue","allHasValue","some","isValid","getTime","call","useEventCallback","event","selectionStart","validSegments_1","find","__spreadArray","reverse","setSelection","onSegmentChange","direction","onSegmentNumberValueChange","num","shouldNext","length_1","rawValue","parseInt","newValue_1","parsedDate","safeDate","updatedSegments","includes","onSegmentPeriodValueChange","ok","newValue","toLowerCase","onSegmentValueRemove","match","input","isFocused","setIsFocused","onBlur","hideCalendarIcon","onCalendarClick","onFocus","placeholder","spellCheck","CircleCheck","CircleAlert","views","lastPattern","patternIndex","c","pattern","p","formatStr_1","isAndroid","test","navigator","userAgent","safeSetSelection","selectionEnd","requestAnimationFrame","document","activeElement","setSelectionRange","fn","deps","useIsomorphicLayoutEffect","args","apply","useLayoutEffect","TextEditor","autoFocus","target","NumberEditor","step","focus","handleKeyDown","indexOf","keyCode","ctrlKey","inputMode","String","val","numVal","Number","SelectEditor","onValueChange","defaultOpen","opt","DateEditor","handleDateSelect","selectedDate","handleDayKeyDown","onDayKeyDown","_params","TimeEditor","timeNow","console","log","handleTimeChange","moment","CellEditor","columnDef","valueFormatter","editorType","editorParams","typedParams","editors","text","number","select","time","dateTime","Editor","editorProps","additionalProps","Fragment","Switch","SwitchPrimitive","Thumb","useCookedData","columnDefs","getCookedSingleRow","row","columns","parentData","updatedRow","col","valueGetter","computedValue","data","field","processChildRow","childRow","parentRow","cookedChild","detailGridOptions","forEach","cookedRow","getCookedRow","isArray","getCookedData","IsDateType","IsTimeType","IsDateTimeType","GetDefaultFilterType","GetAvailableFilterTypes","CellFilter","column","filterType","onFilterChange","onFilterTypeChange","onClear","availableFilterTypes","defaultFilterType","headerName","X","toISOString","style","height","fontSize","width","paddingLeft","paddingRight","left","top","bottom","alignItems","pointerEvents","Search","GroupPanel","showGroupByPanel","groupedColumns","setColumnGrouped","handleGroupDrop","onDragOver","dataTransfer","dropEffect","onDrop","GripVertical","DataGrid","onDataChange","loading","loadingMessage","onRowClick","isChild","rowSelection","_g","propColumns","_h","masterDetail","_j","_k","getDetailRowData","_l","aggFuncs","_m","grandTotalRow","_o","tableLayout","_p","gridData","setGridData","_q","setColumns","_r","sortConfig","setSortConfig","_s","filters","setFilters","_t","filterTypes","setFilterTypes","_u","debouncedFilters","setDebouncedFilters","_v","setGroupedColumns","_w","expandedGroups","setExpandedGroups","_x","selectedRows","setSelectedRows","_y","draggedColumn","setDraggedColumn","_z","dragOverColumn","setDragOverColumn","columnDragCounter","tableRef","_0","editingCell","setEditingCell","_1","editValue","setEditValue","_2","expandedRows","setExpandedRows","_3","detailData","setDetailData","debouncedFnRef","debouncedSetFilters","newFilters","cancel","debounce","_4","past","present","future","history","setHistory","canUndo","canRedo","undo","newPast","newPresent","newFuture","redo","metaKey","shiftKey","window","addEventListener","removeEventListener","useImperativeHandle","div","Object","assign","resetSelection","cookedData","firstItem_1","extracted","keys","charAt","toUpperCase","replace","editable","visible","rowGroup","aggFunc","groupedCols","nonGroupedCols","initialGroupedColumns","handleFilterChange","handleFilterTypeChange","prev","filteredData","filtered","cellValue","filterValue","numValue","filterNum","split","dateValue","filterDate","toDateString","cellString","filterString","startsWith","endsWith","handleSort","sorted","sort","a","b","aValue","bValue","handleMultiSort","handleColumnDragStart","effectAllowed","setData","handleColumnDragOver","handleColumnDragEnter","handleColumnDragLeave","handleColumnDrop","targetField","sourceIndex","targetIndex","newCols","moved","splice","handleColumnDragEnd","startEditing","rowIndex","handleEditChange","newRow","idxInAll","r","previousRecord","newData","cookedData_1","handleEditChangeCheckbox","cookedData_2","toggleRowExpand","newState","row_1","old","successCallback","detail","toggleGroupExpand","groupKey","grouped","newColumns","groupedColumn","filteredColumns","f","calculateAggregation","values","reduce","acc","sum","Math","groupedData","groupFields","groupData","rows","level","parentKey","groupsMap","item","gVal","gKey","isGroup","originalChildren","aggregations","groupObj","child","result","flattenedRows","flatList","walkGroups_1","groups","indentLevel","parentIndex","group","groupIndex","groupField","groupValue","indent","itemCount","absoluteIndex","scrollParentRef","rowVirtualizer","useVirtualizer","count","getScrollElement","estimateSize","detailRows","calculatedHeight","useAnimationFrameWithResizeObserver","overscan","displayColumns","getCellValue","formatCellValue","renderRow","virtualRow","isExpanded_1","groupColumn_1","measureElement","transform","colIndex","isGroupColumn","getCellWidth","textWrap","overflow","cursor","ChevronDown","ChevronRight","toFixed","round","toLocaleString","row_2","indent_1","rowIndex_1","isExpanded","expandButton_1","checked","onCheckedChange","handleRowCheckboxChange","cellRenderer","isEditing","whiteSpace","wordBreak","onDoubleClick","updatedData","valueSetter","cookedData_3","currentTarget","blur","id","tooltipField","colSpan","padding","backgroundColor","zIndex","getData","calculateTotals","totals","minWidth","maxWidth","renderTotalRow","updated","handleHeaderCheckboxChange","allSelected_1","idx","getSelectedRows","selectedData","entries","isSelected","_5","search","setSearch","_6","sidebarOpen","setSidebarOpen","PulseLoader","color","isDragged","isDragOver","draggable","onDragStart","onDragEnter","onDragLeave","onDragEnd","headerTooltip","ChevronUp","ChevronsUpDown","showFilter","ListFilter","getTotalSize","getVirtualItems","borderLeft","flexDirection","overflowY","overflowX","borderBottom","gap","marginBottom","borderWidth","borderColor","cols","border","borderRadius","maxHeight","flexShrink","List","fontWeight","background","writingMode","justifyContent","Calendar"],"mappings":"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","x_google_ignoreList":[10]}